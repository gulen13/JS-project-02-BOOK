{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","src/JS/mobile-menu.js","src/JS/localStarage.js","src/JS/sidebar-foundations.js","node_modules/swiper/swiper.esm.js","node_modules/swiper/core/core.js","node_modules/ssr-window/ssr-window.esm.js","node_modules/swiper/shared/utils.js","node_modules/swiper/shared/get-support.js","node_modules/swiper/shared/get-device.js","node_modules/swiper/shared/get-browser.js","node_modules/swiper/core/modules/resize/resize.js","node_modules/swiper/core/modules/observer/observer.js","node_modules/swiper/core/events-emitter.js","node_modules/swiper/core/update/index.js","node_modules/swiper/core/update/updateSize.js","node_modules/swiper/core/update/updateSlides.js","node_modules/swiper/core/update/updateAutoHeight.js","node_modules/swiper/core/update/updateSlidesOffset.js","node_modules/swiper/core/update/updateSlidesProgress.js","node_modules/swiper/core/update/updateProgress.js","node_modules/swiper/core/update/updateSlidesClasses.js","node_modules/swiper/core/update/updateActiveIndex.js","node_modules/swiper/shared/process-lazy-preloader.js","node_modules/swiper/core/update/updateClickedSlide.js","node_modules/swiper/core/translate/index.js","node_modules/swiper/core/translate/getTranslate.js","node_modules/swiper/core/translate/setTranslate.js","node_modules/swiper/core/translate/minTranslate.js","node_modules/swiper/core/translate/maxTranslate.js","node_modules/swiper/core/translate/translateTo.js","node_modules/swiper/core/transition/index.js","node_modules/swiper/core/transition/setTransition.js","node_modules/swiper/core/transition/transitionStart.js","node_modules/swiper/core/transition/transitionEmit.js","node_modules/swiper/core/transition/transitionEnd.js","node_modules/swiper/core/slide/index.js","node_modules/swiper/core/slide/slideTo.js","node_modules/swiper/core/slide/slideToLoop.js","node_modules/swiper/core/slide/slideNext.js","node_modules/swiper/core/slide/slidePrev.js","node_modules/swiper/core/slide/slideReset.js","node_modules/swiper/core/slide/slideToClosest.js","node_modules/swiper/core/slide/slideToClickedSlide.js","node_modules/swiper/core/loop/index.js","node_modules/swiper/core/loop/loopCreate.js","node_modules/swiper/core/loop/loopFix.js","node_modules/swiper/core/loop/loopDestroy.js","node_modules/swiper/core/grab-cursor/index.js","node_modules/swiper/core/grab-cursor/setGrabCursor.js","node_modules/swiper/core/grab-cursor/unsetGrabCursor.js","node_modules/swiper/core/events/index.js","node_modules/swiper/core/events/onTouchStart.js","node_modules/swiper/core/events/onTouchMove.js","node_modules/swiper/core/events/onTouchEnd.js","node_modules/swiper/core/events/onResize.js","node_modules/swiper/core/events/onClick.js","node_modules/swiper/core/events/onScroll.js","node_modules/swiper/core/events/onLoad.js","node_modules/swiper/core/breakpoints/index.js","node_modules/swiper/core/breakpoints/setBreakpoint.js","node_modules/swiper/core/breakpoints/getBreakpoint.js","node_modules/swiper/core/classes/index.js","node_modules/swiper/core/classes/addClasses.js","node_modules/swiper/core/classes/removeClasses.js","node_modules/swiper/core/check-overflow/index.js","node_modules/swiper/core/defaults.js","node_modules/swiper/core/moduleExtendParams.js","node_modules/swiper/modules/virtual/virtual.js","node_modules/swiper/modules/keyboard/keyboard.js","node_modules/swiper/modules/mousewheel/mousewheel.js","node_modules/swiper/modules/navigation/navigation.js","node_modules/swiper/shared/create-element-if-not-defined.js","node_modules/swiper/modules/pagination/pagination.js","node_modules/swiper/shared/classes-to-selector.js","node_modules/swiper/modules/scrollbar/scrollbar.js","node_modules/swiper/modules/parallax/parallax.js","node_modules/swiper/modules/zoom/zoom.js","node_modules/swiper/modules/controller/controller.js","node_modules/swiper/modules/a11y/a11y.js","node_modules/swiper/modules/history/history.js","node_modules/swiper/modules/hash-navigation/hash-navigation.js","node_modules/swiper/modules/autoplay/autoplay.js","node_modules/swiper/modules/thumbs/thumbs.js","node_modules/swiper/modules/free-mode/free-mode.js","node_modules/swiper/modules/manipulation/manipulation.js","node_modules/swiper/modules/manipulation/methods/appendSlide.js","node_modules/swiper/modules/manipulation/methods/prependSlide.js","node_modules/swiper/modules/manipulation/methods/addSlide.js","node_modules/swiper/modules/manipulation/methods/removeSlide.js","node_modules/swiper/modules/manipulation/methods/removeAllSlides.js","node_modules/swiper/modules/effect-fade/effect-fade.js","node_modules/swiper/shared/effect-init.js","node_modules/swiper/shared/effect-target.js","node_modules/swiper/shared/effect-virtual-transition-end.js","node_modules/swiper/modules/effect-cube/effect-cube.js","node_modules/swiper/modules/effect-flip/effect-flip.js","node_modules/swiper/shared/create-shadow.js","node_modules/swiper/modules/effect-coverflow/effect-coverflow.js","node_modules/swiper/modules/effect-creative/effect-creative.js","node_modules/swiper/modules/effect-cards/effect-cards.js","src/JS/foundationsItems.js","node_modules/@parcel/runtime-js/lib/runtime-e59b6cc2994197ec.js","node_modules/@parcel/runtime-js/lib/runtime-bd26bfbfb97cc9cd.js","node_modules/@parcel/runtime-js/lib/runtime-9b321c4981e03c15.js","node_modules/@parcel/runtime-js/lib/runtime-57f7f55ffae791b2.js","node_modules/@parcel/runtime-js/lib/runtime-18c99673c2555a6d.js","node_modules/@parcel/runtime-js/lib/runtime-d5e97a2e19d8132a.js","node_modules/@parcel/runtime-js/lib/runtime-c77c0556015a1620.js","node_modules/@parcel/runtime-js/lib/runtime-17423b129d022643.js","node_modules/@parcel/runtime-js/lib/runtime-ed53fa3feef0cd76.js","node_modules/@parcel/runtime-js/lib/runtime-ec286fbc12387a87.js","node_modules/@parcel/runtime-js/lib/runtime-febca721fe32cc28.js","node_modules/@parcel/runtime-js/lib/runtime-3863c843805a7490.js","node_modules/@parcel/runtime-js/lib/runtime-9283ec411c1111f9.js","node_modules/@parcel/runtime-js/lib/runtime-5d3d87ca504e585e.js","node_modules/@parcel/runtime-js/lib/runtime-511f14a2c3f55737.js","node_modules/@parcel/runtime-js/lib/runtime-f6008cf360cbb32d.js","node_modules/@parcel/runtime-js/lib/runtime-cc19bd3c253f2cf3.js","node_modules/@parcel/runtime-js/lib/runtime-aea7c0fed4e58db3.js","src/JS/light-dark-theme.js","node_modules/@parcel/runtime-js/lib/runtime-9e3380cf532ee9ca.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","const refs = {\n    openMenuBtn: document.querySelector('[data-menu-open]'),\n    closeMenuBtn: document.querySelector('[data-menu-close]'),\n    menu: document.querySelector('[data-menu]'),\n  };\n\n  refs.openMenuBtn.addEventListener('click', toggleModal);\n  refs.closeMenuBtn.addEventListener('click', toggleModal);\n\n  function toggleModal() {\n    refs.menu.classList.toggle('is-open');\n    refs.openMenuBtn.classList.toggle('is-hidden');\n    refs.closeMenuBtn.classList.toggle('is-hidden');\n\n    if (refs.openMenuBtn.classList.contains('is-hidden')) {\n      document.body.style.overflow = 'hidden';\n    }\n    if (refs.closeMenuBtn.classList.contains('is-hidden')) {\n      document.body.style.overflow = '';\n    }\n  };","export function saveToLocalStorage(key, value) {\n  try {\n    const stringValue = JSON.stringify(value);\n    localStorage.setItem(key, stringValue);\n  } catch (error) {\n    console.error('Error: ', error.message);\n  }\n}","import Swiper, { Navigation, Pagination } from 'swiper';\n\nimport { foundationsItems } from './foundationsItems';\n\nconst galleryElements = document.querySelector('.swiper-wrapper');\n\nconst cardsMarkup = createGalleryCardsMarkup(foundationsItems);\n\ngalleryElements.insertAdjacentHTML('beforeend', cardsMarkup);\n\nfunction createGalleryCardsMarkup(foundationsItems) {\n  return foundationsItems\n    .map(({ number, picture1x, link, description }) => {\n      return `<li class=\"swiper-slide\">\n  <p class=\"number\">${number}</p>\n  <a class=\"slider--link\" href=\"${link}\" target=\"_blank\" rel=\"noopener noreferrer\">\n    <img class=\"slider--image\" src=\"${picture1x}\" alt=\"${description}\" />\n  </a>\n</li>`;\n    })\n    .join('');\n}\n\nconst sliderThumbs = new Swiper('.slider__thumbs .swiper-container', {\n  modules: [Navigation, Pagination],\n  direction: 'vertical',\n  slidesPerView: 4,\n  spaceBetween: 10,\n  rewind: true,\n  // Navigation arrows\n  navigation: {\n    nextEl: '.slider__next',\n    // prevEl: '.slider__prev',\n  },\n});\n","/**\n * Swiper 9.2.0\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2023 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: March 31, 2023\n */\n\nexport { default as Swiper, default } from './core/core.js';\nexport { default as Virtual } from './modules/virtual/virtual.js';\nexport { default as Keyboard } from './modules/keyboard/keyboard.js';\nexport { default as Mousewheel } from './modules/mousewheel/mousewheel.js';\nexport { default as Navigation } from './modules/navigation/navigation.js';\nexport { default as Pagination } from './modules/pagination/pagination.js';\nexport { default as Scrollbar } from './modules/scrollbar/scrollbar.js';\nexport { default as Parallax } from './modules/parallax/parallax.js';\nexport { default as Zoom } from './modules/zoom/zoom.js';\nexport { default as Controller } from './modules/controller/controller.js';\nexport { default as A11y } from './modules/a11y/a11y.js';\nexport { default as History } from './modules/history/history.js';\nexport { default as HashNavigation } from './modules/hash-navigation/hash-navigation.js';\nexport { default as Autoplay } from './modules/autoplay/autoplay.js';\nexport { default as Thumbs } from './modules/thumbs/thumbs.js';\nexport { default as FreeMode } from './modules/free-mode/free-mode.js';\nexport { default as Grid } from './modules/grid/grid.js';\nexport { default as Manipulation } from './modules/manipulation/manipulation.js';\nexport { default as EffectFade } from './modules/effect-fade/effect-fade.js';\nexport { default as EffectCube } from './modules/effect-cube/effect-cube.js';\nexport { default as EffectFlip } from './modules/effect-flip/effect-flip.js';\nexport { default as EffectCoverflow } from './modules/effect-coverflow/effect-coverflow.js';\nexport { default as EffectCreative } from './modules/effect-creative/effect-creative.js';\nexport { default as EffectCards } from './modules/effect-cards/effect-cards.js';","/* eslint no-param-reassign: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport { extend, deleteProps, createElement, elementChildren, elementStyle, elementIndex } from '../shared/utils.js';\nimport { getSupport } from '../shared/get-support.js';\nimport { getDevice } from '../shared/get-device.js';\nimport { getBrowser } from '../shared/get-browser.js';\nimport Resize from './modules/resize/resize.js';\nimport Observer from './modules/observer/observer.js';\nimport eventsEmitter from './events-emitter.js';\nimport update from './update/index.js';\nimport translate from './translate/index.js';\nimport transition from './transition/index.js';\nimport slide from './slide/index.js';\nimport loop from './loop/index.js';\nimport grabCursor from './grab-cursor/index.js';\nimport events from './events/index.js';\nimport breakpoints from './breakpoints/index.js';\nimport classes from './classes/index.js';\nimport checkOverflow from './check-overflow/index.js';\nimport defaults from './defaults.js';\nimport moduleExtendParams from './moduleExtendParams.js';\nimport { processLazyPreloader, preload } from '../shared/process-lazy-preloader.js';\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events,\n  breakpoints,\n  checkOverflow,\n  classes\n};\nconst extendedDefaults = {};\nclass Swiper {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n    const document = getDocument();\n    if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n      const swipers = [];\n      document.querySelectorAll(params.el).forEach(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      // eslint-disable-next-line no-constructor-return\n      return swipers;\n    }\n\n    // Swiper Instance\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        params,\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = extend({}, defaults, allModulesParams);\n\n    // Extend defaults with passed params\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params);\n\n    // add event listeners\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    }\n\n    // Extend Swiper\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: [],\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: 0,\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        startMoving: undefined,\n        evCache: []\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper');\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    // eslint-disable-next-line no-constructor-return\n    return swiper;\n  }\n  getSlideIndex(slideEl) {\n    const {\n      slidesEl,\n      params\n    } = this;\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    const firstSlideIndex = elementIndex(slides[0]);\n    return elementIndex(slideEl) - firstSlideIndex;\n  }\n  getSlideIndexByData(index) {\n    return this.getSlideIndex(this.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index)[0]);\n  }\n  recalcSlides() {\n    const swiper = this;\n    const {\n      slidesEl,\n      params\n    } = swiper;\n    swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  }\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n    swiper.emit('enable');\n  }\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n    swiper.emit('disable');\n  }\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.forEach(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n  slidesPerViewDynamic(view = 'current', exact = false) {\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      }\n    });\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n    swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n    swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.forEach(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n    if (swiper.rtl) {\n      swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n    swiper.update();\n  }\n  mount(element) {\n    const swiper = this;\n    if (swiper.mounted) return true;\n\n    // Find el\n    let el = element || swiper.params.el;\n    if (typeof el === 'string') {\n      el = document.querySelector(el);\n    }\n    if (!el) {\n      return false;\n    }\n    el.swiper = swiper;\n    if (el.shadowEl) {\n      swiper.isElement = true;\n    }\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = el.shadowRoot.querySelector(getWrapperSelector());\n        // Children needs to return slot items\n        return res;\n      }\n      return elementChildren(el, getWrapperSelector())[0];\n    };\n    // Find Wrapper\n    let wrapperEl = getWrapper();\n    if (!wrapperEl && swiper.params.createElements) {\n      wrapperEl = createElement('div', swiper.params.wrapperClass);\n      el.append(wrapperEl);\n      elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n        wrapperEl.append(slideEl);\n      });\n    }\n    Object.assign(swiper, {\n      el,\n      wrapperEl,\n      slidesEl: swiper.isElement ? el : wrapperEl,\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n      wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n    });\n    return true;\n  }\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    }\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Attach events\n    swiper.attachEvents();\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      } else {\n        imageEl.addEventListener('load', e => {\n          processLazyPreloader(swiper, e.target);\n        });\n      }\n    });\n    preload(swiper);\n\n    // Init Flag\n    swiper.initialized = true;\n    preload(swiper);\n\n    // Emit\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params,\n      el,\n      wrapperEl,\n      slides\n    } = swiper;\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      el.removeAttribute('style');\n      wrapperEl.removeAttribute('style');\n      if (slides && slides.length) {\n        slides.forEach(slideEl => {\n          slideEl.classList.remove(params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n          slideEl.removeAttribute('style');\n          slideEl.removeAttribute('data-swiper-slide-index');\n        });\n      }\n    }\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n    if (deleteInstance !== false) {\n      swiper.el.swiper = null;\n      deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n    Swiper.installModule(module);\n    return Swiper;\n  }\n}\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\nexport default Swiper;","/**\n * SSR Window 4.0.2\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: December 13, 2021\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        'constructor' in obj &&\n        obj.constructor === Object);\n}\nfunction extend(target = {}, src = {}) {\n    Object.keys(src).forEach((key) => {\n        if (typeof target[key] === 'undefined')\n            target[key] = src[key];\n        else if (isObject(src[key]) &&\n            isObject(target[key]) &&\n            Object.keys(src[key]).length > 0) {\n            extend(target[key], src[key]);\n        }\n    });\n}\n\nconst ssrDocument = {\n    body: {},\n    addEventListener() { },\n    removeEventListener() { },\n    activeElement: {\n        blur() { },\n        nodeName: '',\n    },\n    querySelector() {\n        return null;\n    },\n    querySelectorAll() {\n        return [];\n    },\n    getElementById() {\n        return null;\n    },\n    createEvent() {\n        return {\n            initEvent() { },\n        };\n    },\n    createElement() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute() { },\n            getElementsByTagName() {\n                return [];\n            },\n        };\n    },\n    createElementNS() {\n        return {};\n    },\n    importNode() {\n        return null;\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n};\nfunction getDocument() {\n    const doc = typeof document !== 'undefined' ? document : {};\n    extend(doc, ssrDocument);\n    return doc;\n}\n\nconst ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n        userAgent: '',\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n    history: {\n        replaceState() { },\n        pushState() { },\n        go() { },\n        back() { },\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener() { },\n    removeEventListener() { },\n    getComputedStyle() {\n        return {\n            getPropertyValue() {\n                return '';\n            },\n        };\n    },\n    Image() { },\n    Date() { },\n    screen: {},\n    setTimeout() { },\n    clearTimeout() { },\n    matchMedia() {\n        return {};\n    },\n    requestAnimationFrame(callback) {\n        if (typeof setTimeout === 'undefined') {\n            callback();\n            return null;\n        }\n        return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame(id) {\n        if (typeof setTimeout === 'undefined') {\n            return;\n        }\n        clearTimeout(id);\n    },\n};\nfunction getWindow() {\n    const win = typeof window !== 'undefined' ? window : {};\n    extend(win, ssrWindow);\n    return win;\n}\n\nexport { extend, getDocument, getWindow, ssrDocument, ssrWindow };\n","import { getWindow, getDocument } from 'ssr-window';\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach(key => {\n    try {\n      object[key] = null;\n    } catch (e) {\n      // no getter for object\n    }\n    try {\n      delete object[key];\n    } catch (e) {\n      // something got wrong\n    }\n  });\n}\nfunction nextTick(callback, delay = 0) {\n  return setTimeout(callback, delay);\n}\nfunction now() {\n  return Date.now();\n}\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n  if (!style) {\n    style = el.style;\n  }\n  return style;\n}\nfunction getTranslate(el, axis = 'x') {\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n  const curStyle = getComputedStyle(el, null);\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n    }\n    // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n  return curTransform || 0;\n}\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\nfunction extend(...args) {\n  const to = Object(args[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  for (let i = 1; i < args.length; i += 1) {\n    const nextSource = args[i];\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n  return to;\n}\nfunction setCSSProperty(el, varName, varValue) {\n  el.style.setProperty(varName, varValue);\n}\nfunction animateCSSModeScroll({\n  swiper,\n  targetPosition,\n  side\n}) {\n  const window = getWindow();\n  const startPosition = -swiper.translate;\n  let startTime = null;\n  let time;\n  const duration = swiper.params.speed;\n  swiper.wrapperEl.style.scrollSnapType = 'none';\n  window.cancelAnimationFrame(swiper.cssModeFrameID);\n  const dir = targetPosition > startPosition ? 'next' : 'prev';\n  const isOutOfBound = (current, target) => {\n    return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n  };\n  const animate = () => {\n    time = new Date().getTime();\n    if (startTime === null) {\n      startTime = time;\n    }\n    const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n    const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n    let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      currentPosition = targetPosition;\n    }\n    swiper.wrapperEl.scrollTo({\n      [side]: currentPosition\n    });\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.scrollSnapType = '';\n      setTimeout(() => {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n      });\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      return;\n    }\n    swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n  };\n  animate();\n}\nfunction getSlideTransformEl(slideEl) {\n  return slideEl.querySelector('.swiper-slide-transform') || slideEl.shadowEl && slideEl.shadowEl.querySelector('.swiper-slide-transform') || slideEl;\n}\nfunction findElementsInElements(elements = [], selector = '') {\n  const found = [];\n  elements.forEach(el => {\n    found.push(...el.querySelectorAll(selector));\n  });\n  return found;\n}\nfunction elementChildren(element, selector = '') {\n  return [...element.children].filter(el => el.matches(selector));\n}\nfunction createElement(tag, classes = []) {\n  const el = document.createElement(tag);\n  el.classList.add(...(Array.isArray(classes) ? classes : [classes]));\n  return el;\n}\nfunction elementOffset(el) {\n  const window = getWindow();\n  const document = getDocument();\n  const box = el.getBoundingClientRect();\n  const body = document.body;\n  const clientTop = el.clientTop || body.clientTop || 0;\n  const clientLeft = el.clientLeft || body.clientLeft || 0;\n  const scrollTop = el === window ? window.scrollY : el.scrollTop;\n  const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n  return {\n    top: box.top + scrollTop - clientTop,\n    left: box.left + scrollLeft - clientLeft\n  };\n}\nfunction elementPrevAll(el, selector) {\n  const prevEls = [];\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if (prev.matches(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return prevEls;\n}\nfunction elementNextAll(el, selector) {\n  const nextEls = [];\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if (next.matches(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return nextEls;\n}\nfunction elementStyle(el, prop) {\n  const window = getWindow();\n  return window.getComputedStyle(el, null).getPropertyValue(prop);\n}\nfunction elementIndex(el) {\n  let child = el;\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\nfunction elementParents(el, selector) {\n  const parents = []; // eslint-disable-line\n  let parent = el.parentElement; // eslint-disable-line\n  while (parent) {\n    if (selector) {\n      if (parent.matches(selector)) parents.push(parent);\n    } else {\n      parents.push(parent);\n    }\n    parent = parent.parentElement;\n  }\n  return parents;\n}\nfunction elementTransitionEnd(el, callback) {\n  function fireCallBack(e) {\n    if (e.target !== el) return;\n    callback.call(el, e);\n    el.removeEventListener('transitionend', fireCallBack);\n  }\n  if (callback) {\n    el.addEventListener('transitionend', fireCallBack);\n  }\n}\nfunction elementOuterSize(el, size, includeMargins) {\n  const window = getWindow();\n  if (includeMargins) {\n    return el[size === 'width' ? 'offsetWidth' : 'offsetHeight'] + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-right' : 'margin-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-left' : 'margin-bottom'));\n  }\n  return el.offsetWidth;\n}\nexport { animateCSSModeScroll, deleteProps, nextTick, now, getTranslate, isObject, extend, getComputedStyle, setCSSProperty, getSlideTransformEl,\n// dom\nfindElementsInElements, createElement, elementChildren, elementOffset, elementPrevAll, elementNextAll, elementStyle, elementIndex, elementParents, elementTransitionEnd, elementOuterSize };","import { getWindow, getDocument } from 'ssr-window';\nlet support;\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n  };\n}\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n  return support;\n}\nexport { getSupport };","import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support.js';\nlet deviceCached;\nfunction calcDevice({\n  userAgent\n} = {}) {\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\nfunction getDevice(overrides = {}) {\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n  return deviceCached;\n}\nexport { getDevice };","import { getWindow } from 'ssr-window';\nlet browser;\nfunction calcBrowser() {\n  const window = getWindow();\n  let needPerspectiveFix = false;\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n  if (isSafari()) {\n    const ua = String(window.navigator.userAgent);\n    if (ua.includes('Version/')) {\n      const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n      needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n    }\n  }\n  return {\n    isSafari: needPerspectiveFix || isSafari(),\n    needPerspectiveFix,\n    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n  };\n}\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n  return browser;\n}\nexport { getBrowser };","import { getWindow } from 'ssr-window';\nexport default function Resize({\n  swiper,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementParents } from '../../../shared/utils.js';\nexport default function Observer({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const observers = [];\n  const window = getWindow();\n  const attach = (target, options = {}) => {\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (swiper.__preventObserver__) return;\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n  const init = () => {\n    if (!swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = elementParents(swiper.el);\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    attach(swiper.el, {\n      childList: swiper.params.observeSlideChildren\n    });\n\n    // Observe wrapper\n    attach(swiper.wrapperEl, {\n      attributes: false\n    });\n  };\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}","/* eslint-disable no-underscore-dangle */\n\nexport default {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n    return self;\n  },\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n    return self;\n  },\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n};","import updateSize from './updateSize.js';\nimport updateSlides from './updateSlides.js';\nimport updateAutoHeight from './updateAutoHeight.js';\nimport updateSlidesOffset from './updateSlidesOffset.js';\nimport updateSlidesProgress from './updateSlidesProgress.js';\nimport updateProgress from './updateProgress.js';\nimport updateSlidesClasses from './updateSlidesClasses.js';\nimport updateActiveIndex from './updateActiveIndex.js';\nimport updateClickedSlide from './updateClickedSlide.js';\nexport default {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};","import { elementStyle } from '../../shared/utils.js';\nexport default function updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const el = swiper.el;\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = el.clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = el.clientHeight;\n  }\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n  height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}","import { elementChildren, elementOuterSize, elementStyle, setCSSProperty } from '../../shared/utils.js';\nexport default function updateSlides() {\n  const swiper = this;\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  }\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slidesLength);\n  }\n\n  // Calc slides\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    let slide;\n    if (slides[i]) slide = slides[i];\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n    }\n    if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + params.spaceBetween}px`;\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + params.spaceBetween}px`;\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (params.spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}","export default function updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.getSlideIndexByData(index);\n    }\n    return swiper.slides[index];\n  };\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || []).forEach(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n}","export default function updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n  // eslint-disable-next-line\n  const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset;\n  }\n}","export default function updateSlidesProgress(translate = this && this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideVisibleClass);\n  });\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n      slides[i].classList.add(params.slideVisibleClass);\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n}","export default function updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}","import { elementChildren, elementNextAll, elementPrevAll } from '../../shared/utils.js';\nexport default function updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    slidesEl,\n    activeIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const getFilteredSlide = selector => {\n    return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n  };\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n  });\n  let activeSlide;\n  if (isVirtual) {\n    if (params.loop) {\n      let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n      if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n      if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n    } else {\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n    }\n  } else {\n    activeSlide = slides[activeIndex];\n  }\n  if (activeSlide) {\n    // Active classes\n    activeSlide.classList.add(params.slideActiveClass);\n\n    // Next Slide\n    let nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !nextSlide) {\n      nextSlide = slides[0];\n    }\n    if (nextSlide) {\n      nextSlide.classList.add(params.slideNextClass);\n    }\n    // Prev Slide\n    let prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !prevSlide === 0) {\n      prevSlide = slides[slides.length - 1];\n    }\n    if (prevSlide) {\n      prevSlide.classList.add(params.slidePrevClass);\n    }\n  }\n  swiper.emitSlidesClasses();\n}","import { preload } from '../../shared/process-lazy-preloader.js';\nexport function getActiveIndexByTranslate(swiper) {\n  const {\n    slidesGrid,\n    params\n  } = swiper;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  let activeIndex;\n  for (let i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  }\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n  return activeIndex;\n}\nexport default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  const getVirtualRealIndex = aIndex => {\n    let realIndex = aIndex - swiper.virtual.slidesBefore;\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n    return realIndex;\n  };\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.realIndex = getVirtualRealIndex(activeIndex);\n    }\n    return;\n  }\n  // Get real index\n  let realIndex;\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (swiper.slides[activeIndex]) {\n    realIndex = parseInt(swiper.slides[activeIndex].getAttribute('data-swiper-slide-index') || activeIndex, 10);\n  } else {\n    realIndex = activeIndex;\n  }\n  Object.assign(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}","export const processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nexport const preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex !== activeIndex && realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(slideIndexLastInView - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && i > slideIndexLastInView) unlazy(swiper, i);\n    }\n  }\n};","export default function updateClickedSlide(e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = e.closest(`.${params.slideClass}, swiper-slide`);\n  let slideFound = false;\n  let slideIndex;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}","import getTranslate from './getTranslate.js';\nimport setTranslate from './setTranslate.js';\nimport minTranslate from './minTranslate.js';\nimport maxTranslate from './maxTranslate.js';\nimport translateTo from './translateTo.js';\nexport default {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};","import { getTranslate } from '../../shared/utils.js';\nexport default function getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    wrapperEl\n  } = swiper;\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n  let currentTranslate = getTranslate(wrapperEl, axis);\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}","export default function setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, byController);\n}","export default function minTranslate() {\n  return -this.snapGrid[0];\n}","export default function maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n  return true;\n}","import setTransition from './setTransition.js';\nimport transitionStart from './transitionStart.js';\nimport transitionEnd from './transitionEnd.js';\nexport default {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};","export default function setTransition(duration, byController) {\n  const swiper = this;\n  if (!swiper.params.cssMode) {\n    swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n  }\n  swiper.emit('setTransition', duration, byController);\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionStart(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}","export default function transitionEmit({\n  swiper,\n  runCallbacks,\n  direction,\n  step\n}) {\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n  swiper.emit(`transition${step}`);\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n    swiper.emit(`slideChangeTransition${step}`);\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionEnd(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}","import slideTo from './slideTo.js';\nimport slideToLoop from './slideToLoop.js';\nimport slideNext from './slideNext.js';\nimport slidePrev from './slidePrev.js';\nimport slideReset from './slideReset.js';\nimport slideToClosest from './slideToClosest.js';\nimport slideToClickedSlide from './slideToClickedSlide.js';\nexport default {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function slideTo(index = 0, speed = this.params.speed, runCallbacks = true, internal, initial) {\n  if (typeof index === 'string') {\n    index = parseInt(index, 10);\n  }\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n    return false;\n  }\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex];\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) {\n        return false;\n      }\n    }\n  }\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  // Update progress\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n  // Update Index\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n      if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n        swiper._cssModeVirtualInitialSet = true;\n        requestAnimationFrame(() => {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._immediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n    swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n  }\n  return true;\n}","export default function slideToLoop(index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      newIndex = swiper.getSlideIndexByData(newIndex);\n    }\n  }\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    enabled,\n    params,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  let perGroup = params.slidesPerGroup;\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'next'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'prev'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n  let prevIndex = 0;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideReset(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideToClosest(speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}","import { elementChildren, nextTick } from '../../shared/utils.js';\nexport default function slideToClickedSlide() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n        swiper.loopFix();\n        slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}","import loopCreate from './loopCreate.js';\nimport loopFix from './loopFix.js';\nimport loopDestroy from './loopDestroy.js';\nexport default {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};","import { elementChildren } from '../../shared/utils.js';\nexport default function loopCreate(slideRealIndex) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  slides.forEach((el, index) => {\n    el.setAttribute('data-swiper-slide-index', index);\n  });\n  swiper.loopFix({\n    slideRealIndex,\n    direction: params.centeredSlides ? undefined : 'next'\n  });\n}","export default function loopFix({\n  slideRealIndex,\n  slideTo = true,\n  direction,\n  setTranslate,\n  activeSlideIndex,\n  byController,\n  byMousewheel\n} = {}) {\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!params.centeredSlides && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10));\n  let loopedSlides = params.loopedSlides || slidesPerView;\n  if (loopedSlides % params.slidesPerGroup !== 0) {\n    loopedSlides += params.slidesPerGroup - loopedSlides % params.slidesPerGroup;\n  }\n  swiper.loopedSlides = loopedSlides;\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  let activeIndex = swiper.activeIndex;\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(swiper.slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0;\n  // prepend last slides before start\n  if (activeSlideIndex < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeSlideIndex, params.slidesPerGroup);\n    for (let i = 0; i < loopedSlides - activeSlideIndex; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      prependSlidesIndexes.push(slides.length - index - 1);\n    }\n  } else if (activeSlideIndex /* + slidesPerView */ > swiper.slides.length - loopedSlides * 2) {\n    slidesAppended = Math.max(activeSlideIndex - (swiper.slides.length - loopedSlides * 2), params.slidesPerGroup);\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      appendSlidesIndexes.push(index);\n    }\n  }\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      slidesEl.prepend(swiper.slides[index]);\n    });\n  }\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      slidesEl.append(swiper.slides[index]);\n    });\n  }\n  swiper.recalcSlides();\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          swiper.slideToLoop(slideRealIndex, 0, false, true);\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        swiper.slideToLoop(slideRealIndex, 0, false, true);\n      }\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      slideTo: false,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix(loopParams);\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix(loopParams);\n    }\n  }\n  swiper.emit('loopFix');\n}","export default function loopDestroy() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  swiper.recalcSlides();\n  const newSlidesOrder = [];\n  swiper.slides.forEach(slideEl => {\n    const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n    newSlidesOrder[index] = slideEl;\n  });\n  swiper.slides.forEach(slideEl => {\n    slideEl.removeAttribute('data-swiper-slide-index');\n  });\n  newSlidesOrder.forEach(slideEl => {\n    slidesEl.append(slideEl);\n  });\n  swiper.recalcSlides();\n  swiper.slideTo(swiper.realIndex, 0);\n}","import setGrabCursor from './setGrabCursor.js';\nimport unsetGrabCursor from './unsetGrabCursor.js';\nexport default {\n  setGrabCursor,\n  unsetGrabCursor\n};","export default function setGrabCursor(moving) {\n  const swiper = this;\n  if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","export default function unsetGrabCursor() {\n  const swiper = this;\n  if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","import { getDocument } from 'ssr-window';\nimport onTouchStart from './onTouchStart.js';\nimport onTouchMove from './onTouchMove.js';\nimport onTouchEnd from './onTouchEnd.js';\nimport onResize from './onResize.js';\nimport onClick from './onClick.js';\nimport onScroll from './onScroll.js';\nimport onLoad from './onLoad.js';\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    el,\n    wrapperEl,\n    device\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method;\n\n  // Touch Events\n  el[domMethod]('pointerdown', swiper.onTouchStart, {\n    passive: false\n  });\n  document[domMethod]('pointermove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('pointerup', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointercancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerout', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerleave', swiper.onTouchEnd, {\n    passive: true\n  });\n\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n\n  // Images loader\n  el[domMethod]('load', swiper.onLoad, {\n    capture: true\n  });\n};\nfunction attachEvents() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n  swiper.onClick = onClick.bind(swiper);\n  swiper.onLoad = onLoad.bind(swiper);\n  if (!dummyEventAttached) {\n    document.addEventListener('touchstart', dummyEventListener);\n    dummyEventAttached = true;\n  }\n  events(swiper, 'on');\n}\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\nexport default {\n  attachEvents,\n  detachEvents\n};","import { getWindow, getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\nexport default function onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n  const data = swiper.touchEventsData;\n  data.evCache.push(event);\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetEl = e.target;\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!swiper.wrapperEl.contains(targetEl)) return;\n  }\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  // eslint-disable-next-line\n  const eventPath = event.composedPath ? event.composedPath() : event.path;\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\n    document.activeElement.blur();\n  }\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n  if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n  swiper.emit('touchStart', e);\n}","import { getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\nexport default function onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n  if (pointerIndex >= 0) data.evCache[pointerIndex] = e;\n  const targetTouch = data.evCache.length > 1 ? data.evCache[0] : e;\n  const pageX = targetTouch.pageX;\n  const pageY = targetTouch.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    if (!e.target.matches(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        prevX: swiper.touches.currentX,\n        prevY: swiper.touches.currentY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n    return;\n  }\n  if (params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n      return;\n    }\n  }\n  if (document.activeElement) {\n    if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling || swiper.zoom && swiper.params.zoom && swiper.params.zoom.enabled && data.evCache.length > 1) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n  if (params.oneWayMovement) {\n    diff = Math.abs(diff) * (rtl ? 1 : -1);\n    touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n  }\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) {\n    diff = -diff;\n    touchesDiff = -touchesDiff;\n  }\n  const prevTouchesDirection = swiper.touchesDirection;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n  const isLoop = swiper.params.loop && !params.cssMode;\n  if (!data.isMoved) {\n    if (isLoop) {\n      swiper.loopFix({\n        direction: swiper.swipeDirection\n      });\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      const evt = new window.CustomEvent('transitionend', {\n        bubbles: true,\n        cancelable: true\n      });\n      swiper.wrapperEl.dispatchEvent(evt);\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  let loopFixed;\n  if (data.isMoved && prevTouchesDirection !== swiper.touchesDirection && isLoop && Math.abs(diff) >= 1) {\n    // need another loop fix\n    swiper.loopFix({\n      direction: swiper.swipeDirection,\n      setTranslate: true\n    });\n    loopFixed = true;\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if (diff > 0) {\n    if (isLoop && !loopFixed && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.size / 2 : swiper.minTranslate())) {\n      swiper.loopFix({\n        direction: 'prev',\n        setTranslate: true,\n        activeSlideIndex: 0\n      });\n    }\n    if (data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n      }\n    }\n  } else if (diff < 0) {\n    if (isLoop && !loopFixed && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.size / 2 : swiper.maxTranslate())) {\n      swiper.loopFix({\n        direction: 'next',\n        setTranslate: true,\n        activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n      });\n    }\n    if (data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n      }\n    }\n  }\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}","import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === event.pointerId);\n  if (pointerIndex >= 0) {\n    data.evCache.splice(pointerIndex, 1);\n  }\n  if (['pointercancel', 'pointerout', 'pointerleave'].includes(event.type)) {\n    const proceed = event.type === 'pointercancel' && (swiper.browser.isSafari || swiper.browser.isWebView);\n    if (!proceed) {\n      return;\n    }\n  }\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  }\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}","let timeout;\nexport default function onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper;\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n  const isVirtualLoop = isVirtual && params.loop;\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    if (swiper.params.loop && !isVirtual) {\n      swiper.slideToLoop(swiper.realIndex, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.resume();\n      }\n    }, 500);\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}","export default function onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}","export default function onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, false);\n}","import { processLazyPreloader } from '../../shared/process-lazy-preloader.js';\nexport default function onLoad(e) {\n  const swiper = this;\n  processLazyPreloader(swiper, e.target);\n  swiper.update();\n}","import setBreakpoint from './setBreakpoint.js';\nimport getBreakpoint from './getBreakpoint.js';\nexport default {\n  setBreakpoint,\n  getBreakpoint\n};","import { extend } from '../../shared/utils.js';\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate(realIndex);\n    swiper.updateSlides();\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}","import { getWindow } from 'ssr-window';\nexport default function getBreakpoint(breakpoints, base = 'window', containerEl) {\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}","import addClasses from './addClasses.js';\nimport removeClasses from './removeClasses.js';\nexport default {\n  addClasses,\n  removeClasses\n};","function prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\nexport default function addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    el,\n    device\n  } = swiper;\n  // prettier-ignore\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  el.classList.add(...classNames);\n  swiper.emitContainerClasses();\n}","export default function removeClasses() {\n  const swiper = this;\n  const {\n    el,\n    classNames\n  } = swiper;\n  el.classList.remove(...classNames);\n  swiper.emitContainerClasses();\n}","function checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\nexport default {\n  checkOverflow\n};","export default {\n  init: true,\n  direction: 'horizontal',\n  oneWayMovement: false,\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 5,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // loop\n  loop: false,\n  loopedSlides: null,\n  loopPreventsSliding: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideActiveClass: 'swiper-slide-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideNextClass: 'swiper-slide-next',\n  slidePrevClass: 'swiper-slide-prev',\n  wrapperClass: 'swiper-wrapper',\n  lazyPreloaderClass: 'swiper-lazy-preloader',\n  lazyPreloadPrevNext: 0,\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};","import { extend } from '../shared/utils.js';\nexport default function moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj = {}) {\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        auto: true\n      };\n    }\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementChildren, setCSSProperty } from '../../shared/utils.js';\nexport default function Virtual({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0\n    }\n  });\n  let cssModeTimeout;\n  const document = getDocument();\n  swiper.virtual = {\n    cache: {},\n    from: undefined,\n    to: undefined,\n    slides: [],\n    offset: 0,\n    slidesGrid: []\n  };\n  const tempDOM = document.createElement('div');\n  function renderSlide(slide, index) {\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    // eslint-disable-next-line\n    let slideEl;\n    if (params.renderSlide) {\n      slideEl = params.renderSlide.call(swiper, slide, index);\n      if (typeof slideEl === 'string') {\n        tempDOM.innerHTML = slideEl;\n        slideEl = tempDOM.children[0];\n      }\n    } else if (swiper.isElement) {\n      slideEl = createElement('swiper-slide');\n    } else {\n      slideEl = createElement('div', swiper.params.slideClass);\n    }\n    slideEl.setAttribute('data-swiper-slide-index', index);\n    if (!params.renderSlide) {\n      slideEl.innerHTML = slide;\n    }\n    if (params.cache) swiper.virtual.cache[index] = slideEl;\n    return slideEl;\n  }\n  function update(force) {\n    const {\n      slidesPerView,\n      slidesPerGroup,\n      centeredSlides,\n      loop: isLoop\n    } = swiper.params;\n    const {\n      addSlidesBefore,\n      addSlidesAfter\n    } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      offset: previousOffset\n    } = swiper.virtual;\n    if (!swiper.params.cssMode) {\n      swiper.updateActiveIndex();\n    }\n    const activeIndex = swiper.activeIndex || 0;\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = (isLoop ? slidesPerView : slidesPerGroup) + addSlidesBefore;\n    }\n    let from = activeIndex - slidesBefore;\n    let to = activeIndex + slidesAfter;\n    if (!isLoop) {\n      from = Math.max(from, 0);\n      to = Math.min(to, slides.length - 1);\n    }\n    let offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n    if (isLoop && activeIndex >= slidesBefore) {\n      from -= slidesBefore;\n      if (!centeredSlides) offset += swiper.slidesGrid[0];\n    } else if (isLoop && activeIndex < slidesBefore) {\n      from = -slidesBefore;\n      if (centeredSlides) offset += swiper.slidesGrid[0];\n    }\n    Object.assign(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n      slidesBefore,\n      slidesAfter\n    });\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      emit('virtualUpdate');\n    }\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.forEach(slideEl => {\n          slideEl.style[offsetProp] = `${offset}px`;\n        });\n      }\n      swiper.updateProgress();\n      emit('virtualUpdate');\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()\n      });\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      } else {\n        emit('virtualUpdate');\n      }\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    const getSlideIndex = index => {\n      let slideIndex = index;\n      if (index < 0) {\n        slideIndex = slides.length + index;\n      } else if (slideIndex >= slides.length) {\n        // eslint-disable-next-line\n        slideIndex = slideIndex - slides.length;\n      }\n      return slideIndex;\n    };\n    if (force) {\n      swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}, swiper-slide`).forEach(slideEl => {\n        slideEl.remove();\n      });\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          const slideIndex = getSlideIndex(i);\n          swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${slideIndex}\"], swiper-slide[data-swiper-slide-index=\"${slideIndex}\"]`).forEach(slideEl => {\n            slideEl.remove();\n          });\n        }\n      }\n    }\n    const loopFrom = isLoop ? -slides.length : 0;\n    const loopTo = isLoop ? slides.length * 2 : slides.length;\n    for (let i = loopFrom; i < loopTo; i += 1) {\n      if (i >= from && i <= to) {\n        const slideIndex = getSlideIndex(i);\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(slideIndex);\n        } else {\n          if (i > previousTo) appendIndexes.push(slideIndex);\n          if (i < previousFrom) prependIndexes.push(slideIndex);\n        }\n      }\n    }\n    appendIndexes.forEach(index => {\n      swiper.slidesEl.append(renderSlide(slides[index], index));\n    });\n    if (isLoop) {\n      for (let i = prependIndexes.length - 1; i >= 0; i -= 1) {\n        const index = prependIndexes[i];\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      }\n    } else {\n      prependIndexes.sort((a, b) => b - a);\n      prependIndexes.forEach(index => {\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      });\n    }\n    elementChildren(swiper.slidesEl, '.swiper-slide, swiper-slide').forEach(slideEl => {\n      slideEl.style[offsetProp] = `${offset}px`;\n    });\n    onRendered();\n  }\n  function appendSlide(slides) {\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    update(true);\n  }\n  function prependSlide(slides) {\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach(cachedIndex => {\n        const cachedEl = cache[cachedIndex];\n        const cachedElIndex = cachedEl.getAttribute('data-swiper-slide-index');\n        if (cachedElIndex) {\n          cachedEl.setAttribute('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  }\n  function removeSlide(slidesIndexes) {\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    update(true);\n    swiper.slideTo(activeIndex, 0);\n  }\n  function removeAllSlides() {\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    update(true);\n    swiper.slideTo(0, 0);\n  }\n  on('beforeInit', () => {\n    if (!swiper.params.virtual.enabled) return;\n    let domSlidesAssigned;\n    if (typeof swiper.passedParams.virtual.slides === 'undefined') {\n      const slides = [...swiper.slidesEl.children].filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`));\n      if (slides && slides.length) {\n        swiper.virtual.slides = [...slides];\n        domSlidesAssigned = true;\n        slides.forEach((slideEl, slideIndex) => {\n          slideEl.setAttribute('data-swiper-slide-index', slideIndex);\n          swiper.virtual.cache[slideIndex] = slideEl;\n          slideEl.remove();\n        });\n      }\n    }\n    if (!domSlidesAssigned) {\n      swiper.virtual.slides = swiper.params.virtual.slides;\n    }\n    swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n    if (!swiper.params.initialSlide) {\n      update();\n    }\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode && !swiper._immediateVirtual) {\n      clearTimeout(cssModeTimeout);\n      cssModeTimeout = setTimeout(() => {\n        update();\n      }, 100);\n    } else {\n      update();\n    }\n  });\n  on('init update resize', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n    }\n  });\n  Object.assign(swiper.virtual, {\n    appendSlide,\n    prependSlide,\n    removeSlide,\n    removeAllSlides,\n    update\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow, getDocument } from 'ssr-window';\nimport { elementOffset, elementParents } from '../../shared/utils.js';\nexport default function Keyboard({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  const window = getWindow();\n  swiper.keyboard = {\n    enabled: false\n  };\n  extendParams({\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n      pageUpDown: true\n    }\n  });\n  function handle(event) {\n    if (!swiper.enabled) return;\n    const {\n      rtlTranslate: rtl\n    } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    const pageUpDown = swiper.params.keyboard.pageUpDown;\n    const isPageUp = pageUpDown && kc === 33;\n    const isPageDown = pageUpDown && kc === 34;\n    const isArrowLeft = kc === 37;\n    const isArrowRight = kc === 39;\n    const isArrowUp = kc === 38;\n    const isArrowDown = kc === 40;\n    // Directions locks\n    if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (elementParents(swiper.el, `.${swiper.params.slideClass}, swiper-slide`).length > 0 && elementParents(swiper.el, `.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const el = swiper.el;\n      const swiperWidth = el.clientWidth;\n      const swiperHeight = el.clientHeight;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = elementOffset(el);\n      if (rtl) swiperOffset.left -= el.scrollLeft;\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n      if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n    } else {\n      if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if (isPageDown || isArrowDown) swiper.slideNext();\n      if (isPageUp || isArrowUp) swiper.slidePrev();\n    }\n    emit('keyPress', kc);\n    return undefined;\n  }\n  function enable() {\n    if (swiper.keyboard.enabled) return;\n    document.addEventListener('keydown', handle);\n    swiper.keyboard.enabled = true;\n  }\n  function disable() {\n    if (!swiper.keyboard.enabled) return;\n    document.removeEventListener('keydown', handle);\n    swiper.keyboard.enabled = false;\n  }\n  on('init', () => {\n    if (swiper.params.keyboard.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.keyboard.enabled) {\n      disable();\n    }\n  });\n  Object.assign(swiper.keyboard, {\n    enable,\n    disable\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow } from 'ssr-window';\nimport { now, nextTick } from '../../shared/utils.js';\nexport default function Mousewheel({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarget: 'container',\n      thresholdDelta: null,\n      thresholdTime: null\n    }\n  });\n  swiper.mousewheel = {\n    enabled: false\n  };\n  let timeout;\n  let lastScrollTime = now();\n  let lastEventBeforeSnap;\n  const recentWheelEvents = [];\n  function normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n    if (e.shiftKey && !pX) {\n      // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) {\n        // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else {\n        // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = pX < 1 ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = pY < 1 ? -1 : 1;\n    }\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY\n    };\n  }\n  function handleMouseEnter() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = true;\n  }\n  function handleMouseLeave() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = false;\n  }\n  function animateSlider(newEvent) {\n    if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\n      // Prevent if delta of wheel scroll delta is below configured threshold\n      return false;\n    }\n    if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\n      // Prevent if time between scrolls is below configured threshold\n      return false;\n    }\n\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    lastScrollTime = new window.Date().getTime();\n    // Return false as a default\n    return false;\n  }\n  function releaseScroll(newEvent) {\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  }\n  function handle(event) {\n    let e = event;\n    let disableParentSwiper = true;\n    if (!swiper.enabled) return;\n    const params = swiper.params.mousewheel;\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    const targetElContainsTarget = targetEl && targetEl.contains(e.target);\n    if (!swiper.mouseEntered && !targetElContainsTarget && !params.releaseOnEdges) return true;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n    const data = normalize(e);\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n    if (delta === 0) return true;\n    if (params.invert) delta = -delta;\n\n    // Get the scroll positions\n    let positions = swiper.getTranslate() + delta * params.sensitivity;\n    if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n    if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate();\n\n    // When loop is true:\n    //     the disableParentSwiper will be true.\n    // When loop is false:\n    //     if the scroll positions is not on edge,\n    //     then the disableParentSwiper will be true.\n    //     if the scroll on edge positions,\n    //     then the disableParentSwiper will be false.\n    disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n    if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n    if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event\n      };\n\n      // Keep the most recent events\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n          animateSlider(newEvent);\n        }\n      } else {\n        animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta)\n      };\n      const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        lastEventBeforeSnap = undefined;\n        let position = swiper.getTranslate() + delta * params.sensitivity;\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n        if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n          swiper.updateSlidesClasses();\n        }\n        if (swiper.params.loop) {\n          swiper.loopFix({\n            direction: newEvent.direction < 0 ? 'next' : 'prev',\n            byMousewheel: true\n          });\n        }\n        if (swiper.params.freeMode.sticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(timeout);\n          timeout = undefined;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            timeout = nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n\n          if (!timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            timeout = nextTick(() => {\n              const snapToThreshold = 0.5;\n              lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    return false;\n  }\n  function events(method) {\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    targetEl[method]('mouseenter', handleMouseEnter);\n    targetEl[method]('mouseleave', handleMouseLeave);\n    targetEl[method]('wheel', handle);\n  }\n  function enable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener('wheel', handle);\n      return true;\n    }\n    if (swiper.mousewheel.enabled) return false;\n    events('addEventListener');\n    swiper.mousewheel.enabled = true;\n    return true;\n  }\n  function disable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, handle);\n      return true;\n    }\n    if (!swiper.mousewheel.enabled) return false;\n    events('removeEventListener');\n    swiper.mousewheel.enabled = false;\n    return true;\n  }\n  on('init', () => {\n    if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n      disable();\n    }\n    if (swiper.params.mousewheel.enabled) enable();\n  });\n  on('destroy', () => {\n    if (swiper.params.cssMode) {\n      enable();\n    }\n    if (swiper.mousewheel.enabled) disable();\n  });\n  Object.assign(swiper.mousewheel, {\n    enable,\n    disable\n  });\n}","import createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Navigation({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n      navigationDisabledClass: 'swiper-navigation-disabled'\n    }\n  });\n  swiper.navigation = {\n    nextEl: null,\n    prevEl: null\n  };\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getEl(el) {\n    let res;\n    if (el && typeof el === 'string' && swiper.isElement) {\n      res = swiper.el.shadowRoot.querySelector(el);\n      if (res) return res;\n    }\n    if (el) {\n      if (typeof el === 'string') res = [...document.querySelectorAll(el)];\n      if (swiper.params.uniqueNavElements && typeof el === 'string' && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) {\n        res = swiper.el.querySelector(el);\n      }\n    }\n    if (el && !res) return el;\n    // if (Array.isArray(res) && res.length === 1) res = res[0];\n    return res;\n  }\n  function toggleEl(el, disabled) {\n    const params = swiper.params.navigation;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (subEl) {\n        subEl.classList[disabled ? 'add' : 'remove'](...params.disabledClass.split(' '));\n        if (subEl.tagName === 'BUTTON') subEl.disabled = disabled;\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n        }\n      }\n    });\n  }\n  function update() {\n    // Update Navigation Buttons\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (swiper.params.loop) {\n      toggleEl(prevEl, false);\n      toggleEl(nextEl, false);\n      return;\n    }\n    toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);\n    toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);\n  }\n  function onPrevClick(e) {\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slidePrev();\n    emit('navigationPrev');\n  }\n  function onNextClick(e) {\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slideNext();\n    emit('navigationNext');\n  }\n  function init() {\n    const params = swiper.params.navigation;\n    swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n      nextEl: 'swiper-button-next',\n      prevEl: 'swiper-button-prev'\n    });\n    if (!(params.nextEl || params.prevEl)) return;\n    let nextEl = getEl(params.nextEl);\n    let prevEl = getEl(params.prevEl);\n    Object.assign(swiper.navigation, {\n      nextEl,\n      prevEl\n    });\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const initButton = (el, dir) => {\n      if (el) {\n        el.addEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      }\n      if (!swiper.enabled && el) {\n        el.classList.add(...params.lockClass.split(' '));\n      }\n    };\n    nextEl.forEach(el => initButton(el, 'next'));\n    prevEl.forEach(el => initButton(el, 'prev'));\n  }\n  function destroy() {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const destroyButton = (el, dir) => {\n      el.removeEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      el.classList.remove(...swiper.params.navigation.disabledClass.split(' '));\n    };\n    nextEl.forEach(el => destroyButton(el, 'next'));\n    prevEl.forEach(el => destroyButton(el, 'prev'));\n  }\n  on('init', () => {\n    if (swiper.params.navigation.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      update();\n    }\n  });\n  on('toEdge fromEdge lock unlock', () => {\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.navigation.lockClass));\n  });\n  on('click', (_s, e) => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const targetEl = e.target;\n    if (swiper.params.navigation.hideOnClick && !prevEl.includes(targetEl) && !nextEl.includes(targetEl)) {\n      if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n      let isHidden;\n      if (nextEl.length) {\n        isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      } else if (prevEl.length) {\n        isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      }\n      if (isHidden === true) {\n        emit('navigationShow');\n      } else {\n        emit('navigationHide');\n      }\n      [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.toggle(swiper.params.navigation.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    init();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    destroy();\n  };\n  Object.assign(swiper.navigation, {\n    enable,\n    disable,\n    update,\n    init,\n    destroy\n  });\n}","import { createElement, elementChildren } from './utils.js';\nexport default function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n  if (swiper.params.createElements) {\n    Object.keys(checkProps).forEach(key => {\n      if (!params[key] && params.auto === true) {\n        let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];\n        if (!element) {\n          element = createElement('div', checkProps[key]);\n          element.className = checkProps[key];\n          swiper.el.append(element);\n        }\n        params[key] = element;\n        originalParams[key] = element;\n      }\n    });\n  }\n  return params;\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nimport { elementIndex, elementOuterSize, elementParents } from '../../shared/utils.js';\nexport default function Pagination({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const pfx = 'swiper-pagination';\n  extendParams({\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets',\n      // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: `${pfx}-bullet`,\n      bulletActiveClass: `${pfx}-bullet-active`,\n      modifierClass: `${pfx}-`,\n      currentClass: `${pfx}-current`,\n      totalClass: `${pfx}-total`,\n      hiddenClass: `${pfx}-hidden`,\n      progressbarFillClass: `${pfx}-progressbar-fill`,\n      progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n      clickableClass: `${pfx}-clickable`,\n      lockClass: `${pfx}-lock`,\n      horizontalClass: `${pfx}-horizontal`,\n      verticalClass: `${pfx}-vertical`,\n      paginationDisabledClass: `${pfx}-disabled`\n    }\n  });\n  swiper.pagination = {\n    el: null,\n    bullets: []\n  };\n  let bulletSize;\n  let dynamicBulletIndex = 0;\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function isPaginationDisabled() {\n    return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;\n  }\n  function setSideBullets(bulletEl, position) {\n    const {\n      bulletActiveClass\n    } = swiper.params.pagination;\n    if (!bulletEl) return;\n    bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n    if (bulletEl) {\n      bulletEl.classList.add(`${bulletActiveClass}-${position}`);\n      bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n      if (bulletEl) {\n        bulletEl.classList.add(`${bulletActiveClass}-${position}-${position}`);\n      }\n    }\n  }\n  function onBulletClick(e) {\n    const bulletEl = e.target.closest(classesToSelector(swiper.params.pagination.bulletClass));\n    if (!bulletEl) {\n      return;\n    }\n    e.preventDefault();\n    const index = elementIndex(bulletEl) * swiper.params.slidesPerGroup;\n    if (swiper.params.loop) {\n      if (swiper.realIndex === index) return;\n      if (index < swiper.loopedSlides || index > swiper.slides.length - swiper.loopedSlides) {\n        swiper.loopFix({\n          direction: index < swiper.loopedSlides ? 'prev' : 'next',\n          activeSlideIndex: index,\n          slideTo: false\n        });\n      }\n      swiper.slideToLoop(index);\n    } else {\n      swiper.slideTo(index);\n    }\n  }\n  function update() {\n    // Render || Update Pagination bullets/items\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    // Current/Total\n    let current;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        bulletSize = elementOuterSize(bullets[0], swiper.isHorizontal() ? 'width' : 'height', true);\n        el.forEach(subEl => {\n          subEl.style[swiper.isHorizontal() ? 'width' : 'height'] = `${bulletSize * (params.dynamicMainBullets + 4)}px`;\n        });\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          dynamicBulletIndex += current - (swiper.previousIndex || 0);\n          if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (dynamicBulletIndex < 0) {\n            dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = Math.max(current - dynamicBulletIndex, 0);\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.forEach(bulletEl => {\n        const classesToRemove = [...['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`)].map(s => typeof s === 'string' && s.includes(' ') ? s.split(' ') : s).flat();\n        bulletEl.classList.remove(...classesToRemove);\n      });\n      if (el.length > 1) {\n        bullets.forEach(bullet => {\n          const bulletIndex = elementIndex(bullet);\n          if (bulletIndex === current) {\n            bullet.classList.add(...params.bulletActiveClass.split(' '));\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              bullet.classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n            if (bulletIndex === firstIndex) {\n              setSideBullets(bullet, 'prev');\n            }\n            if (bulletIndex === lastIndex) {\n              setSideBullets(bullet, 'next');\n            }\n          }\n        });\n      } else {\n        const bullet = bullets[current];\n        if (bullet) {\n          bullet.classList.add(...params.bulletActiveClass.split(' '));\n        }\n        if (params.dynamicBullets) {\n          const firstDisplayedBullet = bullets[firstIndex];\n          const lastDisplayedBullet = bullets[lastIndex];\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            if (bullets[i]) {\n              bullets[i].classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n          }\n          setSideBullets(firstDisplayedBullet, 'prev');\n          setSideBullets(lastDisplayedBullet, 'next');\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.forEach(bullet => {\n          bullet.style[swiper.isHorizontal() ? offsetProp : 'top'] = `${bulletsOffset}px`;\n        });\n      }\n    }\n    el.forEach((subEl, subElIndex) => {\n      if (params.type === 'fraction') {\n        subEl.querySelectorAll(classesToSelector(params.currentClass)).forEach(fractionEl => {\n          fractionEl.textContent = params.formatFractionCurrent(current + 1);\n        });\n        subEl.querySelectorAll(classesToSelector(params.totalClass)).forEach(totalEl => {\n          totalEl.textContent = params.formatFractionTotal(total);\n        });\n      }\n      if (params.type === 'progressbar') {\n        let progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        const scale = (current + 1) / total;\n        let scaleX = 1;\n        let scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        subEl.querySelectorAll(classesToSelector(params.progressbarFillClass)).forEach(progressEl => {\n          progressEl.style.transform = `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`;\n          progressEl.style.transitionDuration = `${swiper.params.speed}ms`;\n        });\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        subEl.innerHTML = params.renderCustom(swiper, current + 1, total);\n        if (subElIndex === 0) emit('paginationRender', subEl);\n      } else {\n        if (subElIndex === 0) emit('paginationRender', subEl);\n        emit('paginationUpdate', subEl);\n      }\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n      }\n    });\n  }\n  function render() {\n    // Render Container\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      let numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) {\n        numberOfBullets = slidesLength;\n      }\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n      }\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n    }\n    swiper.pagination.bullets = [];\n    el.forEach(subEl => {\n      if (params.type !== 'custom') {\n        subEl.innerHTML = paginationHTML || '';\n      }\n      if (params.type === 'bullets') {\n        swiper.pagination.bullets.push(...subEl.querySelectorAll(classesToSelector(params.bulletClass)));\n      }\n    });\n    if (params.type !== 'custom') {\n      emit('paginationRender', el[0]);\n    }\n  }\n  function init() {\n    swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n      el: 'swiper-pagination'\n    });\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = [...document.querySelectorAll(params.el)];\n    }\n    if (!el) {\n      el = params.el;\n    }\n    if (!el || el.length === 0) return;\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && Array.isArray(el) && el.length > 1) {\n      el = [...swiper.el.querySelectorAll(params.el)];\n      // check if it belongs to another nested Swiper\n      if (el.length > 1) {\n        el = el.filter(subEl => {\n          if (elementParents(subEl, '.swiper')[0] !== swiper.el) return false;\n          return true;\n        })[0];\n      }\n    }\n    if (Array.isArray(el) && el.length === 1) el = el[0];\n    Object.assign(swiper.pagination, {\n      el\n    });\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (params.type === 'bullets' && params.clickable) {\n        subEl.classList.add(params.clickableClass);\n      }\n      subEl.classList.add(params.modifierClass + params.type);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        subEl.classList.add(`${params.modifierClass}${params.type}-dynamic`);\n        dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        subEl.classList.add(params.progressbarOppositeClass);\n      }\n      if (params.clickable) {\n        subEl.addEventListener('click', onBulletClick);\n      }\n      if (!swiper.enabled) {\n        subEl.classList.add(params.lockClass);\n      }\n    });\n  }\n  function destroy() {\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => {\n        subEl.classList.remove(params.hiddenClass);\n        subEl.classList.remove(params.modifierClass + params.type);\n        subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        if (params.clickable) {\n          subEl.removeEventListener('click', onBulletClick);\n        }\n      });\n    }\n    if (swiper.pagination.bullets) swiper.pagination.bullets.forEach(subEl => subEl.classList.remove(...params.bulletActiveClass.split(' ')));\n  }\n  on('init', () => {\n    if (swiper.params.pagination.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      render();\n      update();\n    }\n  });\n  on('activeIndexChange', () => {\n    if (typeof swiper.snapIndex === 'undefined') {\n      update();\n    }\n  });\n  on('snapIndexChange', () => {\n    update();\n  });\n  on('snapGridLengthChange', () => {\n    render();\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.pagination.lockClass));\n    }\n  });\n  on('lock unlock', () => {\n    update();\n  });\n  on('click', (_s, e) => {\n    const targetEl = e.target;\n    let {\n      el\n    } = swiper.pagination;\n    if (!Array.isArray(el)) el = [el].filter(element => !!element);\n    if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {\n      if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n      const isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);\n      if (isHidden === true) {\n        emit('paginationShow');\n      } else {\n        emit('paginationHide');\n      }\n      el.forEach(subEl => subEl.classList.toggle(swiper.params.pagination.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.remove(swiper.params.pagination.paginationDisabledClass));\n    }\n    init();\n    render();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.add(swiper.params.pagination.paginationDisabledClass));\n    }\n    destroy();\n  };\n  Object.assign(swiper.pagination, {\n    enable,\n    disable,\n    render,\n    update,\n    init,\n    destroy\n  });\n}","export default function classesToSelector(classes = '') {\n  return `.${classes.trim().replace(/([\\.:!+\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementOffset, nextTick } from '../../shared/utils.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Scrollbar({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  let isTouched = false;\n  let timeout = null;\n  let dragTimeout = null;\n  let dragStartPos;\n  let dragSize;\n  let trackSize;\n  let divider;\n  extendParams({\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n      scrollbarDisabledClass: 'swiper-scrollbar-disabled',\n      horizontalClass: `swiper-scrollbar-horizontal`,\n      verticalClass: `swiper-scrollbar-vertical`\n    }\n  });\n  swiper.scrollbar = {\n    el: null,\n    dragEl: null\n  };\n  function setTranslate() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n    const progress = swiper.params.loop ? swiper.progressLoop : swiper.progress;\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.transform = `translate3d(${newPos}px, 0, 0)`;\n      dragEl.style.width = `${newSize}px`;\n    } else {\n      dragEl.style.transform = `translate3d(0px, ${newPos}px, 0)`;\n      dragEl.style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(timeout);\n      el.style.opacity = 1;\n      timeout = setTimeout(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n  }\n  function setTransition(duration) {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.dragEl.style.transitionDuration = `${duration}ms`;\n  }\n  function updateSize() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    dragEl.style.width = '';\n    dragEl.style.height = '';\n    trackSize = swiper.isHorizontal() ? el.offsetWidth : el.offsetHeight;\n    divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.width = `${dragSize}px`;\n    } else {\n      dragEl.style.height = `${dragSize}px`;\n    }\n    if (divider >= 1) {\n      el.style.display = 'none';\n    } else {\n      el.style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      el.style.opacity = 0;\n    }\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      scrollbar.el.classList[swiper.isLocked ? 'add' : 'remove'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function getPointerPosition(e) {\n    return swiper.isHorizontal() ? e.clientX : e.clientY;\n  }\n  function setDragPosition(e) {\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    let positionRatio;\n    positionRatio = (getPointerPosition(e) - elementOffset(el)[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n    const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  function onDragStart(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    isTouched = true;\n    dragStartPos = e.target === dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n    wrapperEl.style.transitionDuration = '100ms';\n    dragEl.style.transitionDuration = '100ms';\n    setDragPosition(e);\n    clearTimeout(dragTimeout);\n    el.style.transitionDuration = '0ms';\n    if (params.hide) {\n      el.style.opacity = 1;\n    }\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = 'none';\n    }\n    emit('scrollbarDragStart', e);\n  }\n  function onDragMove(e) {\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    if (!isTouched) return;\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    setDragPosition(e);\n    wrapperEl.style.transitionDuration = '0ms';\n    el.style.transitionDuration = '0ms';\n    dragEl.style.transitionDuration = '0ms';\n    emit('scrollbarDragMove', e);\n  }\n  function onDragEnd(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    if (!isTouched) return;\n    isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = '';\n      wrapperEl.style.transitionDuration = '';\n    }\n    if (params.hide) {\n      clearTimeout(dragTimeout);\n      dragTimeout = nextTick(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n    emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  }\n  function events(method) {\n    const {\n      scrollbar,\n      params\n    } = swiper;\n    const el = scrollbar.el;\n    if (!el) return;\n    const target = el;\n    const activeListener = params.passiveListeners ? {\n      passive: false,\n      capture: false\n    } : false;\n    const passiveListener = params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    if (!target) return;\n    const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n    target[eventMethod]('pointerdown', onDragStart, activeListener);\n    document[eventMethod]('pointermove', onDragMove, activeListener);\n    document[eventMethod]('pointerup', onDragEnd, passiveListener);\n  }\n  function enableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('on');\n  }\n  function disableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('off');\n  }\n  function init() {\n    const {\n      scrollbar,\n      el: swiperEl\n    } = swiper;\n    swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n      el: 'swiper-scrollbar'\n    });\n    const params = swiper.params.scrollbar;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = document.querySelectorAll(params.el);\n    } else if (!el) {\n      el = params.el;\n    }\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && el.length > 1 && swiperEl.querySelectorAll(params.el).length === 1) {\n      el = swiperEl.querySelector(params.el);\n    }\n    if (el.length > 0) el = el[0];\n    el.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    let dragEl;\n    if (el) {\n      dragEl = el.querySelector(`.${swiper.params.scrollbar.dragClass}`);\n      if (!dragEl) {\n        dragEl = createElement('div', swiper.params.scrollbar.dragClass);\n        el.append(dragEl);\n      }\n    }\n    Object.assign(scrollbar, {\n      el,\n      dragEl\n    });\n    if (params.draggable) {\n      enableDraggable();\n    }\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function destroy() {\n    const params = swiper.params.scrollbar;\n    const el = swiper.scrollbar.el;\n    if (el) {\n      el.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    }\n    disableDraggable();\n  }\n  on('init', () => {\n    if (swiper.params.scrollbar.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      updateSize();\n      setTranslate();\n    }\n  });\n  on('update resize observerUpdate lock unlock', () => {\n    updateSize();\n  });\n  on('setTranslate', () => {\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    setTransition(duration);\n  });\n  on('enable disable', () => {\n    const {\n      el\n    } = swiper.scrollbar;\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    init();\n    updateSize();\n    setTranslate();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    destroy();\n  };\n  Object.assign(swiper.scrollbar, {\n    enable,\n    disable,\n    updateSize,\n    setTranslate,\n    init,\n    destroy\n  });\n}","import { elementChildren } from '../../shared/utils.js';\nexport default function Parallax({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    parallax: {\n      enabled: false\n    }\n  });\n  const setTransform = (el, progress) => {\n    const {\n      rtl\n    } = swiper;\n    const rtlFactor = rtl ? -1 : 1;\n    const p = el.getAttribute('data-swiper-parallax') || '0';\n    let x = el.getAttribute('data-swiper-parallax-x');\n    let y = el.getAttribute('data-swiper-parallax-y');\n    const scale = el.getAttribute('data-swiper-parallax-scale');\n    const opacity = el.getAttribute('data-swiper-parallax-opacity');\n    const rotate = el.getAttribute('data-swiper-parallax-rotate');\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      el.style.opacity = currentOpacity;\n    }\n    let transform = `translate3d(${x}, ${y}, 0px)`;\n    if (typeof scale !== 'undefined' && scale !== null) {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      transform += ` scale(${currentScale})`;\n    }\n    if (rotate && typeof rotate !== 'undefined' && rotate !== null) {\n      const currentRotate = rotate * progress * -1;\n      transform += ` rotate(${currentRotate}deg)`;\n    }\n    el.style.transform = transform;\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      slides,\n      progress,\n      snapGrid\n    } = swiper;\n    elementChildren(el, '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(subEl => {\n      setTransform(subEl, progress);\n    });\n    slides.forEach((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      slideEl.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale], [data-swiper-parallax-rotate]').forEach(subEl => {\n        setTransform(subEl, slideProgress);\n      });\n    });\n  };\n  const setTransition = (duration = swiper.params.speed) => {\n    const {\n      el\n    } = swiper;\n    el.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(parallaxEl => {\n      let parallaxDuration = parseInt(parallaxEl.getAttribute('data-swiper-parallax-duration'), 10) || duration;\n      if (duration === 0) parallaxDuration = 0;\n      parallaxEl.style.transitionDuration = `${parallaxDuration}ms`;\n    });\n  };\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementChildren, elementOffset, elementParents, getTranslate } from '../../shared/utils.js';\nexport default function Zoom({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed'\n    }\n  });\n  swiper.zoom = {\n    enabled: false\n  };\n  let currentScale = 1;\n  let isScaling = false;\n  let fakeGestureTouched;\n  let fakeGestureMoved;\n  const evCache = [];\n  const gesture = {\n    originX: 0,\n    originY: 0,\n    slideEl: undefined,\n    slideWidth: undefined,\n    slideHeight: undefined,\n    imageEl: undefined,\n    imageWrapEl: undefined,\n    maxRatio: 3\n  };\n  const image = {\n    isTouched: undefined,\n    isMoved: undefined,\n    currentX: undefined,\n    currentY: undefined,\n    minX: undefined,\n    minY: undefined,\n    maxX: undefined,\n    maxY: undefined,\n    width: undefined,\n    height: undefined,\n    startX: undefined,\n    startY: undefined,\n    touchesStart: {},\n    touchesCurrent: {}\n  };\n  const velocity = {\n    x: undefined,\n    y: undefined,\n    prevPositionX: undefined,\n    prevPositionY: undefined,\n    prevTime: undefined\n  };\n  let scale = 1;\n  Object.defineProperty(swiper.zoom, 'scale', {\n    get() {\n      return scale;\n    },\n    set(value) {\n      if (scale !== value) {\n        const imageEl = gesture.imageEl;\n        const slideEl = gesture.slideEl;\n        emit('zoomChange', value, imageEl, slideEl);\n      }\n      scale = value;\n    }\n  });\n  function getDistanceBetweenTouches() {\n    if (evCache.length < 2) return 1;\n    const x1 = evCache[0].pageX;\n    const y1 = evCache[0].pageY;\n    const x2 = evCache[1].pageX;\n    const y2 = evCache[1].pageY;\n    const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    return distance;\n  }\n  function getScaleOrigin() {\n    if (evCache.length < 2) return {\n      x: null,\n      y: null\n    };\n    const box = gesture.imageEl.getBoundingClientRect();\n    return [(evCache[0].pageX + (evCache[1].pageX - evCache[0].pageX) / 2 - box.x) / currentScale, (evCache[0].pageY + (evCache[1].pageY - evCache[0].pageY) / 2 - box.y) / currentScale];\n  }\n  function getSlideSelector() {\n    return swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  }\n  function eventWithinSlide(e) {\n    const slideSelector = getSlideSelector();\n    if (e.target.matches(slideSelector)) return true;\n    if (swiper.slides.filter(slideEl => slideEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n  function eventWithinZoomContainer(e) {\n    const selector = `.${swiper.params.zoom.containerClass}`;\n    if (e.target.matches(selector)) return true;\n    if ([...swiper.el.querySelectorAll(selector)].filter(containerEl => containerEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n\n  // Events\n  function onGestureStart(e) {\n    if (e.pointerType === 'mouse') {\n      evCache.splice(0, evCache.length);\n    }\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    evCache.push(e);\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureTouched = true;\n    gesture.scaleStart = getDistanceBetweenTouches();\n    if (!gesture.slideEl) {\n      gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      if (!gesture.slideEl) gesture.slideEl = swiper.slides[swiper.activeIndex];\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n      if (!gesture.imageWrapEl) {\n        gesture.imageEl = undefined;\n        return;\n      }\n      gesture.maxRatio = gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    }\n    if (gesture.imageEl) {\n      const [originX, originY] = getScaleOrigin();\n      gesture.originX = originX;\n      gesture.originY = originY;\n      gesture.imageEl.style.transitionDuration = '0ms';\n    }\n    isScaling = true;\n  }\n  function onGestureChange(e) {\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache[pointerIndex] = e;\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureMoved = true;\n    gesture.scaleMove = getDistanceBetweenTouches();\n    if (!gesture.imageEl) {\n      return;\n    }\n    zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n    }\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function onGestureEnd(e) {\n    if (!eventWithinSlide(e)) return;\n    if (e.pointerType === 'mouse' && e.type === 'pointerout') return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache.splice(pointerIndex, 1);\n    if (!fakeGestureTouched || !fakeGestureMoved) {\n      return;\n    }\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    if (!gesture.imageEl) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.imageEl.style.transitionDuration = `${swiper.params.speed}ms`;\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n    currentScale = zoom.scale;\n    isScaling = false;\n    if (zoom.scale > 1 && gesture.slideEl) {\n      gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    } else if (zoom.scale <= 1 && gesture.slideEl) {\n      gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    }\n    if (zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n      gesture.slideEl = undefined;\n    }\n  }\n  function onTouchStart(e) {\n    const device = swiper.device;\n    if (!gesture.imageEl) return;\n    if (image.isTouched) return;\n    if (device.android && e.cancelable) e.preventDefault();\n    image.isTouched = true;\n    const event = evCache.length > 0 ? evCache[0] : e;\n    image.touchesStart.x = event.pageX;\n    image.touchesStart.y = event.pageY;\n  }\n  function onTouchMove(e) {\n    if (!eventWithinSlide(e) || !eventWithinZoomContainer(e)) return;\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !gesture.slideEl) return;\n    if (!image.isMoved) {\n      image.width = gesture.imageEl.offsetWidth;\n      image.height = gesture.imageEl.offsetHeight;\n      image.startX = getTranslate(gesture.imageWrapEl, 'x') || 0;\n      image.startY = getTranslate(gesture.imageWrapEl, 'y') || 0;\n      gesture.slideWidth = gesture.slideEl.offsetWidth;\n      gesture.slideHeight = gesture.slideEl.offsetHeight;\n      gesture.imageWrapEl.style.transitionDuration = '0ms';\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.touchesCurrent.x = evCache.length > 0 ? evCache[0].pageX : e.pageX;\n    image.touchesCurrent.y = evCache.length > 0 ? evCache[0].pageY : e.pageY;\n    const touchesDiff = Math.max(Math.abs(image.touchesCurrent.x - image.touchesStart.x), Math.abs(image.touchesCurrent.y - image.touchesStart.y));\n    if (touchesDiff > 5) {\n      swiper.allowClick = false;\n    }\n    if (!image.isMoved && !isScaling) {\n      if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n        image.isTouched = false;\n        return;\n      }\n      if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n    e.stopPropagation();\n    image.isMoved = true;\n    const scaleRatio = (zoom.scale - currentScale) / (gesture.maxRatio - swiper.params.zoom.minRatio);\n    const {\n      originX,\n      originY\n    } = gesture;\n    image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX + scaleRatio * (image.width - originX * 2);\n    image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY + scaleRatio * (image.height - originY * 2);\n    if (image.currentX < image.minX) {\n      image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n    }\n    if (image.currentY < image.minY) {\n      image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTouchEnd() {\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n    gesture.imageWrapEl.style.transitionDuration = `${momentumDuration}ms`;\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTransitionEnd() {\n    const zoom = swiper.zoom;\n    if (gesture.slideEl && swiper.activeIndex !== swiper.slides.indexOf(gesture.slideEl)) {\n      if (gesture.imageEl) {\n        gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n      }\n      if (gesture.imageWrapEl) {\n        gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n      }\n      gesture.slideEl.classList.remove(`${swiper.params.zoom.zoomedSlideClass}`);\n      zoom.scale = 1;\n      currentScale = 1;\n      gesture.slideEl = undefined;\n      gesture.imageEl = undefined;\n      gesture.imageWrapEl = undefined;\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n  }\n  function zoomIn(e) {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (e && e.target) {\n        gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      }\n      if (!gesture.slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n        } else {\n          gesture.slideEl = swiper.slides[swiper.activeIndex];\n        }\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.touchAction = 'none';\n    }\n    gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.pageX;\n      touchY = e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n    const forceZoomRatio = typeof e === 'number' ? e : null;\n    if (currentScale === 1 && forceZoomRatio) {\n      touchX = undefined;\n      touchY = undefined;\n    }\n    zoom.scale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    currentScale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    if (e && !(currentScale === 1 && forceZoomRatio)) {\n      slideWidth = gesture.slideEl.offsetWidth;\n      slideHeight = gesture.slideEl.offsetHeight;\n      offsetX = elementOffset(gesture.slideEl).left + window.scrollX;\n      offsetY = elementOffset(gesture.slideEl).top + window.scrollY;\n      diffX = offsetX + slideWidth / 2 - touchX;\n      diffY = offsetY + slideHeight / 2 - touchY;\n      imageWidth = gesture.imageEl.offsetWidth;\n      imageHeight = gesture.imageEl.offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n      translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n      translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    if (forceZoomRatio && zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = `translate3d(${translateX}px, ${translateY}px,0)`;\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function zoomOut() {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n      } else {\n        gesture.slideEl = swiper.slides[swiper.activeIndex];\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = '';\n      swiper.wrapperEl.style.touchAction = '';\n    }\n    zoom.scale = 1;\n    currentScale = 1;\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n    gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    gesture.slideEl = undefined;\n    gesture.originX = 0;\n    gesture.originY = 0;\n  }\n\n  // Toggle Zoom\n  function zoomToggle(e) {\n    const zoom = swiper.zoom;\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoomOut();\n    } else {\n      // Zoom In\n      zoomIn(e);\n    }\n  }\n  function getListeners() {\n    const passiveListener = swiper.params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    const activeListenerWithCapture = swiper.params.passiveListeners ? {\n      passive: false,\n      capture: true\n    } : true;\n    return {\n      passiveListener,\n      activeListenerWithCapture\n    };\n  }\n\n  // Attach/Detach Events\n  function enable() {\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.addEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.addEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.addEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.addEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  function disable() {\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n    zoom.enabled = false;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.removeEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.removeEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.removeEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.removeEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  on('init', () => {\n    if (swiper.params.zoom.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    disable();\n  });\n  on('touchStart', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchStart(e);\n  });\n  on('touchEnd', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchEnd(e);\n  });\n  on('doubleTap', (_s, e) => {\n    if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n      zoomToggle(e);\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n      onTransitionEnd();\n    }\n  });\n  on('slideChange', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n      onTransitionEnd();\n    }\n  });\n  Object.assign(swiper.zoom, {\n    enable,\n    disable,\n    in: zoomIn,\n    out: zoomOut,\n    toggle: zoomToggle\n  });\n}","/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\nimport { elementTransitionEnd, nextTick } from '../../shared/utils.js';\nexport default function Controller({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide' // or 'container'\n    }\n  });\n\n  swiper.controller = {\n    control: undefined\n  };\n  function LinearSpline(x, y) {\n    const binarySearch = function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }();\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n    };\n    return this;\n  }\n  // xxx: for now i will just save one spline function to to\n  function getInterpolateFunction(c) {\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  }\n  function setTranslate(_t, byController) {\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    const Swiper = swiper.constructor;\n    function setControlledTranslate(c) {\n      if (c.destroyed) return;\n\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n      }\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  }\n  function setTransition(duration, byController) {\n    const Swiper = swiper.constructor;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      if (c.destroyed) return;\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        elementTransitionEnd(c.wrapperEl, () => {\n          if (!controlled) return;\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  }\n  function removeSpline() {\n    if (!swiper.controller.control) return;\n    if (swiper.controller.spline) {\n      swiper.controller.spline = undefined;\n      delete swiper.controller.spline;\n    }\n  }\n  on('beforeInit', () => {\n    if (typeof window !== 'undefined' && (\n    // eslint-disable-line\n    typeof swiper.params.controller.control === 'string' || swiper.params.controller.control instanceof HTMLElement)) {\n      const controlElement = document.querySelector(swiper.params.controller.control);\n      if (controlElement && controlElement.swiper) {\n        swiper.controller.control = controlElement.swiper;\n      } else if (controlElement) {\n        const onControllerSwiper = e => {\n          swiper.controller.control = e.detail[0];\n          swiper.update();\n          controlElement.removeEventListener('init', onControllerSwiper);\n        };\n        controlElement.addEventListener('init', onControllerSwiper);\n      }\n      return;\n    }\n    swiper.controller.control = swiper.params.controller.control;\n  });\n  on('update', () => {\n    removeSpline();\n  });\n  on('resize', () => {\n    removeSpline();\n  });\n  on('observerUpdate', () => {\n    removeSpline();\n  });\n  on('setTranslate', (_s, translate, byController) => {\n    if (!swiper.controller.control) return;\n    swiper.controller.setTranslate(translate, byController);\n  });\n  on('setTransition', (_s, duration, byController) => {\n    if (!swiper.controller.control) return;\n    swiper.controller.setTransition(duration, byController);\n  });\n  Object.assign(swiper.controller, {\n    setTranslate,\n    setTransition\n  });\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport { createElement, elementIndex } from '../../shared/utils.js';\nexport default function A11y({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n      slideLabelMessage: '{{index}} / {{slidesLength}}',\n      containerMessage: null,\n      containerRoleDescriptionMessage: null,\n      itemRoleDescriptionMessage: null,\n      slideRole: 'group',\n      id: null\n    }\n  });\n  swiper.a11y = {\n    clicked: false\n  };\n  let liveRegion = null;\n  function notify(message) {\n    const notification = liveRegion;\n    if (notification.length === 0) return;\n    notification.innerHTML = '';\n    notification.innerHTML = message;\n  }\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getRandomNumber(size = 16) {\n    const randomChar = () => Math.round(16 * Math.random()).toString(16);\n    return 'x'.repeat(size).replace(/x/g, randomChar);\n  }\n  function makeElFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '0');\n    });\n  }\n  function makeElNotFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '-1');\n    });\n  }\n  function addElRole(el, role) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('role', role);\n    });\n  }\n  function addElRoleDescription(el, description) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-roledescription', description);\n    });\n  }\n  function addElControls(el, controls) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-controls', controls);\n    });\n  }\n  function addElLabel(el, label) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-label', label);\n    });\n  }\n  function addElId(el, id) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('id', id);\n    });\n  }\n  function addElLive(el, live) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-live', live);\n    });\n  }\n  function disableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', true);\n    });\n  }\n  function enableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', false);\n    });\n  }\n  function onEnterOrSpaceKey(e) {\n    if (e.keyCode !== 13 && e.keyCode !== 32) return;\n    const params = swiper.params.a11y;\n    const targetEl = e.target;\n    if (swiper.pagination && swiper.pagination.el && (targetEl === swiper.pagination.el || swiper.pagination.el.contains(e.target))) {\n      if (!e.target.matches(classesToSelector(swiper.params.pagination.bulletClass))) return;\n    }\n    if (swiper.navigation && swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        notify(params.lastSlideMessage);\n      } else {\n        notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        notify(params.firstSlideMessage);\n      } else {\n        notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && targetEl.matches(classesToSelector(swiper.params.pagination.bulletClass))) {\n      targetEl.click();\n    }\n  }\n  function updateNavigation() {\n    if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (prevEl) {\n      if (swiper.isBeginning) {\n        disableEl(prevEl);\n        makeElNotFocusable(prevEl);\n      } else {\n        enableEl(prevEl);\n        makeElFocusable(prevEl);\n      }\n    }\n    if (nextEl) {\n      if (swiper.isEnd) {\n        disableEl(nextEl);\n        makeElNotFocusable(nextEl);\n      } else {\n        enableEl(nextEl);\n        makeElFocusable(nextEl);\n      }\n    }\n  }\n  function hasPagination() {\n    return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n  }\n  function hasClickablePagination() {\n    return hasPagination() && swiper.params.pagination.clickable;\n  }\n  function updatePagination() {\n    const params = swiper.params.a11y;\n    if (!hasPagination()) return;\n    swiper.pagination.bullets.forEach(bulletEl => {\n      if (swiper.params.pagination.clickable) {\n        makeElFocusable(bulletEl);\n        if (!swiper.params.pagination.renderBullet) {\n          addElRole(bulletEl, 'button');\n          addElLabel(bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, elementIndex(bulletEl) + 1));\n        }\n      }\n      if (bulletEl.matches(classesToSelector(swiper.params.pagination.bulletActiveClass))) {\n        bulletEl.setAttribute('aria-current', 'true');\n      } else {\n        bulletEl.removeAttribute('aria-current');\n      }\n    });\n  }\n  const initNavEl = (el, wrapperId, message) => {\n    makeElFocusable(el);\n    if (el.tagName !== 'BUTTON') {\n      addElRole(el, 'button');\n      el.addEventListener('keydown', onEnterOrSpaceKey);\n    }\n    addElLabel(el, message);\n    addElControls(el, wrapperId);\n  };\n  const handlePointerDown = () => {\n    swiper.a11y.clicked = true;\n  };\n  const handlePointerUp = () => {\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        if (!swiper.destroyed) {\n          swiper.a11y.clicked = false;\n        }\n      });\n    });\n  };\n  const handleFocus = e => {\n    if (swiper.a11y.clicked) return;\n    const slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n    if (!slideEl || !swiper.slides.includes(slideEl)) return;\n    const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\n    const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\n    if (isActive || isVisible) return;\n    if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\n    if (swiper.isHorizontal()) {\n      swiper.el.scrollLeft = 0;\n    } else {\n      swiper.el.scrollTop = 0;\n    }\n    swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\n  };\n  const initSlides = () => {\n    const params = swiper.params.a11y;\n    if (params.itemRoleDescriptionMessage) {\n      addElRoleDescription(swiper.slides, params.itemRoleDescriptionMessage);\n    }\n    if (params.slideRole) {\n      addElRole(swiper.slides, params.slideRole);\n    }\n    const slidesLength = swiper.slides.length;\n    if (params.slideLabelMessage) {\n      swiper.slides.forEach((slideEl, index) => {\n        const slideIndex = swiper.params.loop ? parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10) : index;\n        const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n        addElLabel(slideEl, ariaLabelMessage);\n      });\n    }\n  };\n  const init = () => {\n    const params = swiper.params.a11y;\n    swiper.el.append(liveRegion);\n\n    // Container\n    const containerEl = swiper.el;\n    if (params.containerRoleDescriptionMessage) {\n      addElRoleDescription(containerEl, params.containerRoleDescriptionMessage);\n    }\n    if (params.containerMessage) {\n      addElLabel(containerEl, params.containerMessage);\n    }\n\n    // Wrapper\n    const wrapperEl = swiper.wrapperEl;\n    const wrapperId = params.id || wrapperEl.getAttribute('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n    const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n    addElId(wrapperEl, wrapperId);\n    addElLive(wrapperEl, live);\n\n    // Slide\n    initSlides();\n\n    // Navigation\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => initNavEl(el, wrapperId, params.nextSlideMessage));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => initNavEl(el, wrapperId, params.prevSlideMessage));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.addEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.addEventListener('focus', handleFocus, true);\n    swiper.el.addEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.addEventListener('pointerup', handlePointerUp, true);\n  };\n  function destroy() {\n    if (liveRegion && liveRegion.length > 0) liveRegion.remove();\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.removeEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.removeEventListener('focus', handleFocus, true);\n    swiper.el.removeEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.removeEventListener('pointerup', handlePointerUp, true);\n  }\n  on('beforeInit', () => {\n    liveRegion = createElement('span', swiper.params.a11y.notificationClass);\n    liveRegion.setAttribute('aria-live', 'assertive');\n    liveRegion.setAttribute('aria-atomic', 'true');\n    if (swiper.isElement) {\n      liveRegion.setAttribute('slot', 'container-end');\n    }\n  });\n  on('afterInit', () => {\n    if (!swiper.params.a11y.enabled) return;\n    init();\n  });\n  on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\n    if (!swiper.params.a11y.enabled) return;\n    initSlides();\n  });\n  on('fromEdge toEdge afterInit lock unlock', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updateNavigation();\n  });\n  on('paginationUpdate', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updatePagination();\n  });\n  on('destroy', () => {\n    if (!swiper.params.a11y.enabled) return;\n    destroy();\n  });\n}","import { getWindow } from 'ssr-window';\nexport default function History({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides',\n      keepQuery: false\n    }\n  });\n  let initialized = false;\n  let paths = {};\n  const slugify = text => {\n    return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n  };\n  const getPathValues = urlOverride => {\n    const window = getWindow();\n    let location;\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n    const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return {\n      key,\n      value\n    };\n  };\n  const setHistory = (key, index) => {\n    const window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    let location;\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n    const slide = swiper.slides[index];\n    let value = slugify(slide.getAttribute('data-history'));\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key ? `${key}/` : ''}${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key ? `${key}/` : ''}${value}`;\n    }\n    if (swiper.params.history.keepQuery) {\n      value += location.search;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({\n        value\n      }, null, value);\n    } else {\n      window.history.pushState({\n        value\n      }, null, value);\n    }\n  };\n  const scrollToSlide = (speed, value, runCallbacks) => {\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides[i];\n        const slideHistory = slugify(slide.getAttribute('data-history'));\n        if (slideHistory === value) {\n          const index = swiper.getSlideIndex(slide);\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n  const setHistoryPopState = () => {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, paths.value, false);\n  };\n  const init = () => {\n    const window = getWindow();\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n    if (!paths.key && !paths.value) {\n      if (!swiper.params.history.replaceState) {\n        window.addEventListener('popstate', setHistoryPopState);\n      }\n      return;\n    }\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n  const destroy = () => {\n    const window = getWindow();\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}","import { getWindow, getDocument } from 'ssr-window';\nimport { elementChildren } from '../../shared/utils.js';\nexport default function HashNavigation({\n  swiper,\n  extendParams,\n  emit,\n  on\n}) {\n  let initialized = false;\n  const document = getDocument();\n  const window = getWindow();\n  extendParams({\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false\n    }\n  });\n  const onHashChange = () => {\n    emit('hashChange');\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides[swiper.activeIndex].getAttribute('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.getSlideIndex(elementChildren(swiper.slidesEl, `.${swiper.params.slideClass}[data-hash=\"${newHash}\"], swiper-slide[data-hash=\"${newHash}\"]`)[0]);\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  };\n  const setHash = () => {\n    if (!initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, `#${swiper.slides[swiper.activeIndex].getAttribute('data-hash')}` || '');\n      emit('hashSet');\n    } else {\n      const slide = swiper.slides[swiper.activeIndex];\n      const hash = slide.getAttribute('data-hash') || slide.getAttribute('data-history');\n      document.location.hash = hash || '';\n      emit('hashSet');\n    }\n  };\n  const init = () => {\n    if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n    initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides[i];\n        const slideHash = slide.getAttribute('data-hash') || slide.getAttribute('data-history');\n        if (slideHash === hash) {\n          const index = swiper.getSlideIndex(slide);\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      window.addEventListener('hashchange', onHashChange);\n    }\n  };\n  const destroy = () => {\n    if (swiper.params.hashNavigation.watchState) {\n      window.removeEventListener('hashchange', onHashChange);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHash();\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHash();\n    }\n  });\n}","/* eslint no-underscore-dangle: \"off\" */\n/* eslint no-use-before-define: \"off\" */\nimport { getDocument } from 'ssr-window';\nexport default function Autoplay({\n  swiper,\n  extendParams,\n  on,\n  emit,\n  params\n}) {\n  swiper.autoplay = {\n    running: false,\n    paused: false,\n    timeLeft: 0\n  };\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false\n    }\n  });\n  let timeout;\n  let raf;\n  let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayTimeLeft;\n  let autoplayStartTime = new Date().getTime;\n  let wasPaused;\n  let isTouched;\n  let pausedByTouch;\n  let touchStartTimeout;\n  let slideChanged;\n  let pausedByInteraction;\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\n    if (e.target !== swiper.wrapperEl) return;\n    swiper.wrapperEl.removeEventListener('transitionend', onTransitionEnd);\n    resume();\n  }\n  const calcTimeLeft = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) {\n      wasPaused = true;\n    } else if (wasPaused) {\n      autoplayDelayCurrent = autoplayTimeLeft;\n      wasPaused = false;\n    }\n    const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\n    swiper.autoplay.timeLeft = timeLeft;\n    emit('autoplayTimeLeft', timeLeft, timeLeft / autoplayDelayTotal);\n    raf = requestAnimationFrame(() => {\n      calcTimeLeft();\n    });\n  };\n  const getSlideDelay = () => {\n    let activeSlideEl;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      activeSlideEl = swiper.slides.filter(slideEl => slideEl.classList.contains('swiper-slide-active'))[0];\n    } else {\n      activeSlideEl = swiper.slides[swiper.activeIndex];\n    }\n    if (!activeSlideEl) return undefined;\n    const currentSlideDelay = parseInt(activeSlideEl.getAttribute('data-swiper-autoplay'), 10);\n    return currentSlideDelay;\n  };\n  const run = delayForce => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    cancelAnimationFrame(raf);\n    calcTimeLeft();\n    let delay = typeof delayForce === 'undefined' ? swiper.params.autoplay.delay : delayForce;\n    autoplayDelayTotal = swiper.params.autoplay.delay;\n    autoplayDelayCurrent = swiper.params.autoplay.delay;\n    const currentSlideDelay = getSlideDelay();\n    if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === 'undefined') {\n      delay = currentSlideDelay;\n      autoplayDelayTotal = currentSlideDelay;\n      autoplayDelayCurrent = currentSlideDelay;\n    }\n    autoplayTimeLeft = delay;\n    const speed = swiper.params.speed;\n    const proceed = () => {\n      if (!swiper || swiper.destroyed) return;\n      if (swiper.params.autoplay.reverseDirection) {\n        if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\n          swiper.slidePrev(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, speed, true, true);\n          emit('autoplay');\n        }\n      } else {\n        if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\n          swiper.slideNext(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, speed, true, true);\n          emit('autoplay');\n        }\n      }\n      if (swiper.params.cssMode) {\n        autoplayStartTime = new Date().getTime();\n        requestAnimationFrame(() => {\n          run();\n        });\n      }\n    };\n    if (delay > 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        proceed();\n      }, delay);\n    } else {\n      requestAnimationFrame(() => {\n        proceed();\n      });\n    }\n\n    // eslint-disable-next-line\n    return delay;\n  };\n  const start = () => {\n    swiper.autoplay.running = true;\n    run();\n    emit('autoplayStart');\n  };\n  const stop = () => {\n    swiper.autoplay.running = false;\n    clearTimeout(timeout);\n    cancelAnimationFrame(raf);\n    emit('autoplayStop');\n  };\n  const pause = (internal, reset) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    clearTimeout(timeout);\n    if (!internal) {\n      pausedByInteraction = true;\n    }\n    const proceed = () => {\n      emit('autoplayPause');\n      if (swiper.params.autoplay.waitForTransition) {\n        swiper.wrapperEl.addEventListener('transitionend', onTransitionEnd);\n      } else {\n        resume();\n      }\n    };\n    swiper.autoplay.paused = true;\n    if (reset) {\n      if (slideChanged) {\n        autoplayTimeLeft = swiper.params.autoplay.delay;\n      }\n      slideChanged = false;\n      proceed();\n      return;\n    }\n    const delay = autoplayTimeLeft || swiper.params.autoplay.delay;\n    autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\n    if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\n    proceed();\n  };\n  const resume = () => {\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\n    autoplayStartTime = new Date().getTime();\n    if (pausedByInteraction) {\n      pausedByInteraction = false;\n      run(autoplayTimeLeft);\n    } else {\n      run();\n    }\n    swiper.autoplay.paused = false;\n    emit('autoplayResume');\n  };\n  const onVisibilityChange = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    const document = getDocument();\n    if (document.visibilityState === 'hidden') {\n      pausedByInteraction = true;\n      pause(true);\n    }\n    if (document.visibilityState === 'visible') {\n      resume();\n    }\n  };\n  const onPointerEnter = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByInteraction = true;\n    pause(true);\n  };\n  const onPointerLeave = e => {\n    if (e.pointerType !== 'mouse') return;\n    if (swiper.autoplay.paused) {\n      resume();\n    }\n  };\n  const attachMouseEvents = () => {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.el.addEventListener('pointerenter', onPointerEnter);\n      swiper.el.addEventListener('pointerleave', onPointerLeave);\n    }\n  };\n  const detachMouseEvents = () => {\n    swiper.el.removeEventListener('pointerenter', onPointerEnter);\n    swiper.el.removeEventListener('pointerleave', onPointerLeave);\n  };\n  const attachDocumentEvents = () => {\n    const document = getDocument();\n    document.addEventListener('visibilitychange', onVisibilityChange);\n  };\n  const detachDocumentEvents = () => {\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  };\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      attachMouseEvents();\n      attachDocumentEvents();\n      autoplayStartTime = new Date().getTime();\n      start();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n    detachDocumentEvents();\n    if (swiper.autoplay.running) {\n      stop();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (internal || !swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n      return;\n    }\n    isTouched = true;\n    pausedByTouch = false;\n    pausedByInteraction = false;\n    touchStartTimeout = setTimeout(() => {\n      pausedByInteraction = true;\n      pausedByTouch = true;\n      pause(true);\n    }, 200);\n  });\n  on('touchEnd', () => {\n    if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\n    clearTimeout(touchStartTimeout);\n    clearTimeout(timeout);\n    if (swiper.params.autoplay.disableOnInteraction) {\n      pausedByTouch = false;\n      isTouched = false;\n      return;\n    }\n    if (pausedByTouch && swiper.params.cssMode) resume();\n    pausedByTouch = false;\n    isTouched = false;\n  });\n  on('slideChange', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    slideChanged = true;\n  });\n  Object.assign(swiper.autoplay, {\n    start,\n    stop,\n    pause,\n    resume\n  });\n}","import { getDocument } from 'ssr-window';\nimport { elementChildren, isObject } from '../../shared/utils.js';\nexport default function Thumb({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-thumbs'\n    }\n  });\n  let initialized = false;\n  let swiperCreated = false;\n  swiper.thumbs = {\n    swiper: null\n  };\n  function onThumbClick() {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && clickedSlide.classList.contains(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt(thumbsSwiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      swiper.slideToLoop(slideToIndex);\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n  function init() {\n    const {\n      thumbs: thumbsParams\n    } = swiper.params;\n    if (initialized) return false;\n    initialized = true;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Object.assign(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      Object.assign(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper.update();\n    } else if (isObject(thumbsParams.swiper)) {\n      const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n      Object.assign(thumbsSwiperParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n      swiperCreated = true;\n    }\n    swiper.thumbs.swiper.el.classList.add(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', onThumbClick);\n    return true;\n  }\n  function update(initial) {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n    thumbsToActivate = Math.floor(thumbsToActivate);\n    thumbsSwiper.slides.forEach(slideEl => slideEl.classList.remove(thumbActiveClass));\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        elementChildren(thumbsSwiper.slidesEl, `[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).forEach(slideEl => {\n          slideEl.classList.add(thumbActiveClass);\n        });\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        if (thumbsSwiper.slides[swiper.realIndex + i]) {\n          thumbsSwiper.slides[swiper.realIndex + i].classList.add(thumbActiveClass);\n        }\n      }\n    }\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      const currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n      if (thumbsSwiper.params.loop) {\n        const newThumbsSlide = thumbsSwiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') === `${swiper.realIndex}`)[0];\n        newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) {\n          // newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n  }\n  on('beforeInit', () => {\n    const {\n      thumbs\n    } = swiper.params;\n    if (!thumbs || !thumbs.swiper) return;\n    if (typeof thumbs.swiper === 'string' || thumbs.swiper instanceof HTMLElement) {\n      const document = getDocument();\n      const getThumbsElementAndInit = () => {\n        const thumbsElement = typeof thumbs.swiper === 'string' ? document.querySelector(thumbs.swiper) : thumbs.swiper;\n        if (thumbsElement && thumbsElement.swiper) {\n          thumbs.swiper = thumbsElement.swiper;\n          init();\n          update(true);\n        } else if (thumbsElement) {\n          const onThumbsSwiper = e => {\n            thumbs.swiper = e.detail[0];\n            thumbsElement.removeEventListener('init', onThumbsSwiper);\n            init();\n            update(true);\n            thumbs.swiper.update();\n            swiper.update();\n          };\n          thumbsElement.addEventListener('init', onThumbsSwiper);\n        }\n        return thumbsElement;\n      };\n      const watchForThumbsToAppear = () => {\n        if (swiper.destroyed) return;\n        const thumbsElement = getThumbsElementAndInit();\n        if (!thumbsElement) {\n          requestAnimationFrame(watchForThumbsToAppear);\n        }\n      };\n      requestAnimationFrame(watchForThumbsToAppear);\n    } else {\n      init();\n      update(true);\n    }\n  });\n  on('slideChange update resize observerUpdate', () => {\n    update();\n  });\n  on('setTransition', (_s, duration) => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    thumbsSwiper.setTransition(duration);\n  });\n  on('beforeDestroy', () => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    if (swiperCreated) {\n      thumbsSwiper.destroy();\n    }\n  });\n  Object.assign(swiper.thumbs, {\n    init,\n    update\n  });\n}","import { elementTransitionEnd, now } from '../../shared/utils.js';\nexport default function freeMode({\n  swiper,\n  extendParams,\n  emit,\n  once\n}) {\n  extendParams({\n    freeMode: {\n      enabled: false,\n      momentum: true,\n      momentumRatio: 1,\n      momentumBounce: true,\n      momentumBounceRatio: 1,\n      momentumVelocityRatio: 1,\n      sticky: false,\n      minimumVelocity: 0.02\n    }\n  });\n  function onTouchStart() {\n    const translate = swiper.getTranslate();\n    swiper.setTranslate(translate);\n    swiper.setTransition(0);\n    swiper.touchEventsData.velocities.length = 0;\n    swiper.freeMode.onTouchEnd({\n      currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n    });\n  }\n  function onTouchMove() {\n    const {\n      touchEventsData: data,\n      touches\n    } = swiper;\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: now()\n    });\n  }\n  function onTouchEnd({\n    currentPos\n  }) {\n    const {\n      params,\n      wrapperEl,\n      rtlTranslate: rtl,\n      snapGrid,\n      touchEventsData: data\n    } = swiper;\n    // Time diff\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime;\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n    if (params.freeMode.momentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeMode.momentumVelocityRatio;\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeMode.momentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeMode.sticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeMode.sticky) {\n          // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeMode.sticky) {\n        swiper.slideToClosest();\n        return;\n      }\n      if (params.freeMode.momentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        elementTransitionEnd(wrapperEl, () => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            elementTransitionEnd(wrapperEl, () => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          elementTransitionEnd(wrapperEl, () => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeMode.sticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      emit('_freeModeNoMomentumRelease');\n    }\n    if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n  }\n  Object.assign(swiper, {\n    freeMode: {\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd\n    }\n  });\n}","import appendSlide from './methods/appendSlide.js';\nimport prependSlide from './methods/prependSlide.js';\nimport addSlide from './methods/addSlide.js';\nimport removeSlide from './methods/removeSlide.js';\nimport removeAllSlides from './methods/removeAllSlides.js';\nexport default function Manipulation({\n  swiper\n}) {\n  Object.assign(swiper, {\n    appendSlide: appendSlide.bind(swiper),\n    prependSlide: prependSlide.bind(swiper),\n    addSlide: addSlide.bind(swiper),\n    removeSlide: removeSlide.bind(swiper),\n    removeAllSlides: removeAllSlides.bind(swiper)\n  });\n}","export default function appendSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  const appendElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.append(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.append(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) appendElement(slides[i]);\n    }\n  } else {\n    appendElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n}","export default function prependSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  const prependElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.prepend(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.prepend(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) prependElement(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    prependElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}","export default function addSlide(index, slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.recalcSlides();\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides[i];\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) slidesEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    slidesEl.append(slides);\n  }\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    slidesEl.append(slidesBuffer[i]);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeSlide(slidesIndexes) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeAllSlides() {\n  const swiper = this;\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}","import effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFade({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    fadeEffect: {\n      crossFade: false\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides\n    } = swiper;\n    const params = swiper.params.fadeEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = swiper.slides[i];\n      const offset = slideEl.swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(slideEl.progress), 0) : 1 + Math.min(Math.max(slideEl.progress, -1), 0);\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.opacity = slideOpacity;\n      targetEl.style.transform = `translate3d(${tx}px, ${ty}px, 0px)`;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'fade',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","export default function effectInit(params) {\n  const {\n    effect,\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams,\n    perspective,\n    recreateShadows,\n    getEffectParams\n  } = params;\n  on('beforeInit', () => {\n    if (swiper.params.effect !== effect) return;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n    if (perspective && perspective()) {\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n    }\n    const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n    Object.assign(swiper.params, overwriteParamsResult);\n    Object.assign(swiper.originalParams, overwriteParamsResult);\n  });\n  on('setTranslate', () => {\n    if (swiper.params.effect !== effect) return;\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    if (swiper.params.effect !== effect) return;\n    setTransition(duration);\n  });\n  on('transitionEnd', () => {\n    if (swiper.params.effect !== effect) return;\n    if (recreateShadows) {\n      if (!getEffectParams || !getEffectParams().slideShadows) return;\n      // remove shadows\n      swiper.slides.forEach(slideEl => {\n        slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => shadowEl.remove());\n      });\n      // create new one\n      recreateShadows();\n    }\n  });\n  let requireUpdateOnVirtual;\n  on('virtualUpdate', () => {\n    if (swiper.params.effect !== effect) return;\n    if (!swiper.slides.length) {\n      requireUpdateOnVirtual = true;\n    }\n    requestAnimationFrame(() => {\n      if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\n        setTranslate();\n        requireUpdateOnVirtual = false;\n      }\n    });\n  });\n}","import { getSlideTransformEl } from './utils.js';\nexport default function effectTarget(effectParams, slideEl) {\n  const transformEl = getSlideTransformEl(slideEl);\n  if (transformEl !== slideEl) {\n    transformEl.style.backfaceVisibility = 'hidden';\n    transformEl.style['-webkit-backface-visibility'] = 'hidden';\n  }\n  return transformEl;\n}","import { elementTransitionEnd } from './utils.js';\nexport default function effectVirtualTransitionEnd({\n  swiper,\n  duration,\n  transformElements,\n  allSlides\n}) {\n  const {\n    activeIndex\n  } = swiper;\n  const getSlide = el => {\n    if (!el.parentElement) {\n      // assume shadow root\n      const slide = swiper.slides.filter(slideEl => slideEl.shadowEl && slideEl.shadowEl === el.parentNode)[0];\n      return slide;\n    }\n    return el.parentElement;\n  };\n  if (swiper.params.virtualTranslate && duration !== 0) {\n    let eventTriggered = false;\n    let transitionEndTarget;\n    if (allSlides) {\n      transitionEndTarget = transformElements;\n    } else {\n      transitionEndTarget = transformElements.filter(transformEl => {\n        const el = transformEl.classList.contains('swiper-slide-transform') ? getSlide(transformEl) : transformEl;\n        return swiper.getSlideIndex(el) === activeIndex;\n      });\n    }\n    transitionEndTarget.forEach(el => {\n      elementTransitionEnd(el, () => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const evt = new window.CustomEvent('transitionend', {\n          bubbles: true,\n          cancelable: true\n        });\n        swiper.wrapperEl.dispatchEvent(evt);\n      });\n    });\n  }\n}","import effectInit from '../../shared/effect-init.js';\nimport { createElement } from '../../shared/utils.js';\nexport default function EffectCube({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94\n    }\n  });\n  const createSlideShadows = (slideEl, progress, isHorizontal) => {\n    let shadowBefore = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}`);\n      slideEl.append(shadowBefore);\n    }\n    if (!shadowAfter) {\n      shadowAfter = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}`);\n      slideEl.append(shadowAfter);\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // create new ones\n    const isHorizontal = swiper.isHorizontal();\n    swiper.slides.forEach(slideEl => {\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      createSlideShadows(slideEl, progress, isHorizontal);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      wrapperEl,\n      slides,\n      width: swiperWidth,\n      height: swiperHeight,\n      rtlTranslate: rtl,\n      size: swiperSize,\n      browser\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl = swiper.slidesEl.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          swiper.slidesEl.append(cubeShadowEl);\n        }\n        cubeShadowEl.style.height = `${swiperWidth}px`;\n      } else {\n        cubeShadowEl = el.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          el.append(cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + round * 4 * swiperSize;\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = 3 * swiperSize + swiperSize * 4 * round;\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = slideIndex * 90 + progress * 90;\n        if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n      }\n      slideEl.style.transform = transform;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, isHorizontal);\n      }\n    }\n    wrapperEl.style.transformOrigin = `50% 50% -${swiperSize / 2}px`;\n    wrapperEl.style['-webkit-transform-origin'] = `50% 50% -${swiperSize / 2}px`;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl.style.transform = `translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`;\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n        const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        cubeShadowEl.style.transform = `scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`;\n      }\n    }\n    const zFactor = (browser.isSafari || browser.isWebView) && browser.needPerspectiveFix ? -swiperSize / 2 : 0;\n    wrapperEl.style.transform = `translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`;\n    wrapperEl.style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);\n  };\n  const setTransition = duration => {\n    const {\n      el,\n      slides\n    } = swiper;\n    slides.forEach(slideEl => {\n      slideEl.style.transitionDuration = `${duration}ms`;\n      slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(subEl => {\n        subEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      const shadowEl = el.querySelector('.swiper-cube-shadow');\n      if (shadowEl) shadowEl.style.transitionDuration = `${duration}ms`;\n    }\n  };\n  effectInit({\n    effect: 'cube',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.cubeEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      resistanceRatio: 0,\n      spaceBetween: 0,\n      centeredSlides: false,\n      virtualTranslate: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFlip({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true\n    }\n  });\n  const createSlideShadows = (slideEl, progress, params) => {\n    let shadowBefore = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createShadow(params, slideEl, swiper.isHorizontal() ? 'left' : 'top');\n    }\n    if (!shadowAfter) {\n      shadowAfter = createShadow(params, slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // Set shadows\n    const params = swiper.params.flipEffect;\n    swiper.slides.forEach(slideEl => {\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      createSlideShadows(slideEl, progress, params);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.flipEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, params);\n      }\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.flipEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import { createElement, getSlideTransformEl } from './utils.js';\nexport default function createShadow(params, slideEl, side) {\n  const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\n  const shadowContainer = getSlideTransformEl(slideEl);\n  let shadowEl = shadowContainer.querySelector(`.${shadowClass}`);\n  if (!shadowEl) {\n    shadowEl = createElement('div', `swiper-slide-shadow${side ? `-${side}` : ''}`);\n    shadowContainer.append(shadowEl);\n  }\n  return shadowEl;\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCoverflow({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      scale: 1,\n      modifier: 1,\n      slideShadows: true\n    }\n  });\n  const setTranslate = () => {\n    const {\n      width: swiperWidth,\n      height: swiperHeight,\n      slides,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const slideEl = slides[i];\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = slideEl.swiperSlideOffset;\n      const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n      const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n      let stretch = params.stretch;\n      // Allow percentage to make a relative stretch for responsive sliders\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = parseFloat(params.stretch) / 100 * slideSize;\n      }\n      let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n      let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n      let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier);\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n      if (Math.abs(scale) < 0.001) scale = 0;\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = slideTransform;\n      slideEl.style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBeforeEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n        let shadowAfterEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n        if (!shadowBeforeEl) {\n          shadowBeforeEl = createShadow(params, slideEl, isHorizontal ? 'left' : 'top');\n        }\n        if (!shadowAfterEl) {\n          shadowAfterEl = createShadow(params, slideEl, isHorizontal ? 'right' : 'bottom');\n        }\n        if (shadowBeforeEl) shadowBeforeEl.style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if (shadowAfterEl) shadowAfterEl.style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n  };\n  effectInit({\n    effect: 'coverflow',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCreative({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    creativeEffect: {\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      }\n    }\n  });\n  const getTranslateValue = value => {\n    if (typeof value === 'string') return value;\n    return `${value}px`;\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      wrapperEl,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.creativeEffect;\n    const {\n      progressMultiplier: multiplier\n    } = params;\n    const isCenteredSlides = swiper.params.centeredSlides;\n    if (isCenteredSlides) {\n      const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n      wrapperEl.style.transform = `translateX(calc(50% - ${margin}px))`;\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideEl.progress, -params.limitProgress), params.limitProgress);\n      let originalProgress = progress;\n      if (!isCenteredSlides) {\n        originalProgress = Math.min(Math.max(slideEl.originalProgress, -params.limitProgress), params.limitProgress);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      const r = [0, 0, 0];\n      let custom = false;\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n      let data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1\n      };\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      }\n      // set translate\n      t.forEach((value, index) => {\n        t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n      });\n      // set rotates\n      r.forEach((value, index) => {\n        r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n      });\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const translateString = t.join(', ');\n      const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n      const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n      const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n      const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`;\n\n      // Set shadows\n      if (custom && data.shadow || !custom) {\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl && data.shadow) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) {\n          const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n          shadowEl.style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n      targetEl.style.opacity = opacityString;\n      if (data.origin) {\n        targetEl.style.transformOrigin = data.origin;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'creative',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => swiper.params.creativeEffect.perspective,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCards({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      rotate: true,\n      perSlideRotate: 2,\n      perSlideOffset: 8\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = swiper.translate;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = slideEl.swiperSlideOffset;\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.wrapperEl.style.transform = `translateX(${swiper.minTranslate()}px)`;\n      }\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -params.perSlideRotate * progress;\n      let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rotate : 0}deg)\n        scale(${scaleString})\n      `;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import saveTheChildren from '../images/funds/save-the-children.png';\nimport saveTheChildren2x from '../images/funds/save-the-children@2x.png';\nimport projectHope from '../images/funds/project-hope.png';\nimport projectHope2 from '../images/funds/project-hope@2x.png';\nimport united24 from '../images/funds/united24.png';\nimport united24х2 from '../images/funds/united24@2x.png';\nimport internationalMedical from '../images/funds/international-medical-corps.png';\nimport internationalMedical2 from '../images/funds/international-medical-corps@2x.png';\nimport razom from '../images/funds/razom.png';\nimport razom2 from '../images/funds/razom@2x.png';\nimport actionAgainst from '../images/funds/action-against-hunger.png';\nimport actionAgainst2 from '../images/funds/action-against-hunger@2x.png';\nimport sergiyPrytula from '../images/funds/sergiy-prytula.png';\nimport sergiyPrytula2 from '../images/funds/sergiy-prytula@2x.png';\nimport medicinsSans from '../images/funds/medicins-sans.png';\nimport medicinsSans2 from '../images/funds/medicins-sans@2x.png';\nimport worldVision from '../images/funds/world-vision.png';\nimport worldVision2 from '../images/funds/world-vision@2x.png';\n\nexport const foundationsItems = [\n  {\n    number: '01',\n    picture1x: saveTheChildren,\n    picture2x: saveTheChildren2x,\n    link: 'https://www.savethechildren.net/',\n    description: 'Save the Children',\n  },\n  {\n    number: '02',\n    picture1x: projectHope,\n    picture2x: projectHope2,\n    link: 'https://www.projecthope.org/',\n    description: 'Project Hope',\n  },\n  {\n    number: '03',\n    picture1x: internationalMedical,\n    picture2x: internationalMedical2,\n    link: 'https://internationalmedicalcorps.org/',\n    description: 'International Medical Corps',\n  },\n  {\n    number: '04',\n    picture1x: razom,\n    picture2x: razom2,\n    link: 'https://www.razomforukraine.org/',\n    description: 'Razom',\n  },\n  {\n    number: '05',\n    picture1x: actionAgainst,\n    picture2x: actionAgainst2,\n    link: 'https://www.actionagainsthunger.org/',\n    description: 'Action Against Hunger',\n  },\n  {\n    number: '06',\n    picture1x: sergiyPrytula,\n    picture2x: sergiyPrytula2,\n    link: 'https://prytulafoundation.org/en',\n    description: 'Serhiy Prytula Charity Foundation',\n  },\n  {\n    number: '07',\n    picture1x: united24,\n    picture2x: united24х2,\n    link: 'https://u24.gov.ua/uk',\n    description: 'UNITED 24',\n  },\n  {\n    number: '08',\n    picture1x: medicinsSans,\n    picture2x: medicinsSans2,\n    link: 'https://www.msf.org/ukraine',\n    description: 'Medicins Sans Frontieres',\n  },\n  {\n    number: '09',\n    picture1x: worldVision,\n    picture2x: worldVision2,\n    link: 'https://www.wvi.org/emergencies/ukraine',\n    description: 'World Vision',\n  },\n];\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"1g4TS\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"2Sb0T\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"3tV1Z\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"jBb6k\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"l26qB\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"3RXYn\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"hzM5g\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"7oxGK\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"hR2eA\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"iUJEn\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"gIxXY\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"99VK2\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"kmP7m\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"8TTiK\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"lPOix\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"a28Qo\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"4bePE\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"kD4vA\")).toString();","const themeSwitcher = document.querySelector('.theme-switcher');\nconst header = document.querySelector('header');\nconst nav = document.querySelector('nav');\nconst iconLogo = document.querySelector('#iconLogo');\nconst iconShop = document.querySelector('svg.icon__lock');\nconst categories = document.querySelector('section.categories');\n\nconst handleChange = (element, theme) => {\n  if (theme === 'dark') element.classList.add('dark');\n  else if (element.classList.contains('dark')) element.classList.remove('dark');\n};\n\nthemeSwitcher.addEventListener('click', function (e) {\n  const theme = e.target.checked ? 'dark' : 'light';\n\n  handleChange(document.body, theme);\n\n  handleChange(header, theme);\n\n  handleChange(nav, theme);\n\n  iconLogo.setAttribute(\n    'href',\n    e.target.checked\n      ? '/JS-project-02-BOOK/icons.31d2e38d.svg#icon-logo-dark'\n      : '/JS-project-02-BOOK/icons.31d2e38d.svg#icon-logo'\n  );\n\n  handleChange(iconShop, theme);\n\n  handleChange(categories, theme);\n\n  const btnSeeMore = document.querySelector('.books-container');\n  handleChange(btnSeeMore, theme);\n});\n\nconst themeBtn = document.querySelector('.switch input');\nconst darkPosition = localStorage.getItem('theme');\n\nthemeBtn.addEventListener('change', () => {\n  if (themeBtn.checked === true) {\n    localStorage.setItem('theme', 'dark');\n  } else {\n    localStorage.setItem('theme', 'light');\n  }\n});\n\nif (darkPosition === 'dark') {\n  themeBtn.click();\n  console.log(darkPosition);\n}\n","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"a8cj2\\\":\\\"shopping-list.5671885e.js\\\",\\\"1g4TS\\\":\\\"save-the-children.f386ac79.png\\\",\\\"2Sb0T\\\":\\\"save-the-children@2x.bb06c1a1.png\\\",\\\"3tV1Z\\\":\\\"project-hope.1967846a.png\\\",\\\"jBb6k\\\":\\\"project-hope@2x.27d8a192.png\\\",\\\"l26qB\\\":\\\"united24.df4edb6e.png\\\",\\\"3RXYn\\\":\\\"united24@2x.5be2becd.png\\\",\\\"hzM5g\\\":\\\"international-medical-corps.520fe416.png\\\",\\\"7oxGK\\\":\\\"international-medical-corps@2x.4b9488f2.png\\\",\\\"hR2eA\\\":\\\"razom.b1f43175.png\\\",\\\"iUJEn\\\":\\\"razom@2x.74cc1241.png\\\",\\\"gIxXY\\\":\\\"action-against-hunger.b340057f.png\\\",\\\"99VK2\\\":\\\"action-against-hunger@2x.a3bf7a04.png\\\",\\\"kmP7m\\\":\\\"sergiy-prytula.c441ab9f.png\\\",\\\"8TTiK\\\":\\\"sergiy-prytula@2x.df2f9aa3.png\\\",\\\"lPOix\\\":\\\"medicins-sans.43de5b71.png\\\",\\\"a28Qo\\\":\\\"medicins-sans@2x.9866f621.png\\\",\\\"4bePE\\\":\\\"world-vision.9daa7f1e.png\\\",\\\"kD4vA\\\":\\\"world-vision@2x.42c7d515.png\\\"}\"));"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","$a8f80de55895c409$var$refs","openMenuBtn","document","querySelector","closeMenuBtn","menu","$a8f80de55895c409$var$toggleModal","classList","toggle","contains","body","style","overflow","addEventListener","$55179cbc6586b4f6$export$1b8cd2d0ef9a8e5d","key","value","stringValue","JSON","stringify","localStorage","setItem","error","console","message","$62uwT","parcelRequire","$339b63c1d9941127$var$galleryElements","$339b63c1d9941127$var$cardsMarkup","$fdRma","foundationsItems","map","number","picture1x","link","description","join","insertAdjacentHTML","$iaGrY","default","modules","$iSRJB","direction","slidesPerView","spaceBetween","rewind","navigation","nextEl","$7xxPi","$d3aa16e5c5539775$var$prototypes","$mPJF1","$jEOyI","$4HaqR","$b4Co2","$jtnqo","$7Q6KL","$lt8Bz","$i1StC","$6Vw97","$5rbog","$5IPB6","$d3aa16e5c5539775$var$extendedDefaults","$d3aa16e5c5539775$var$Swiper","constructor","args","el","params","prototype","toString","call","slice","$dNWnP","extend","getDocument","querySelectorAll","swipers","forEach","containerEl","newParams","push","swiper","this","__swiper__","support","$1gHsq","getSupport","device","$agupX","getDevice","userAgent","browser","$kMnIR","getBrowser","eventsListeners","eventsAnyListeners","__modules__","Array","isArray","allModulesParams","mod","extendParams","$kmZuC","on","bind","once","off","emit","swiperParams","$1AMhv","originalParams","passedParams","eventName","onAny","assign","enabled","classNames","slides","slidesGrid","snapGrid","slidesSizesGrid","isHorizontal","isVertical","activeIndex","realIndex","isBeginning","isEnd","translate","previousTranslate","progress","velocity","animating","allowSlideNext","allowSlidePrev","touchEventsData","isTouched","undefined","isMoved","allowTouchCallbacks","touchStartTime","isScrolling","currentTranslate","startTranslate","allowThresholdMove","focusableElements","lastClickTime","clickTimeout","velocities","allowMomentumBounce","startMoving","evCache","allowClick","allowTouchMove","touches","startX","startY","currentX","currentY","diff","imagesToLoad","imagesLoaded","init","getSlideIndex","slideEl","slidesEl","elementChildren","slideClass","firstSlideIndex","elementIndex","getSlideIndexByData","index","filter","getAttribute","recalcSlides","enable","grabCursor","setGrabCursor","disable","unsetGrabCursor","setProgress","speed","Math","min","max","minTranslate","current","maxTranslate","translateTo","updateActiveIndex","updateSlidesClasses","emitContainerClasses","_emitClasses","cls","className","split","indexOf","containerModifierClass","getSlideClasses","destroyed","emitSlidesClasses","updates","slidesPerViewDynamic","view","exact","size","swiperSize","spv","centeredSlides","breakLoop","slideSize","swiperSlideSize","i1","i2","update","setTranslate","translateValue","rtlTranslate","newTranslate","translated","breakpoints","setBreakpoint","imageEl","complete","$fa3Xa","processLazyPreloader","updateSize","updateSlides","updateProgress","freeMode","autoHeight","updateAutoHeight","slideTo","watchOverflow","checkOverflow","changeDirection","newDirection","needUpdate","currentDirection","remove","add","width","height","changeLanguageDirection","rtl","dir","mount","element","mounted","shadowEl","isElement","getWrapperSelector","wrapperClass","trim","wrapperEl","shadowRoot","getWrapper","createElements","createElement","append","toLowerCase","elementStyle","wrongRTL","initialized","addClasses","loop","virtual","initialSlide","slidesBefore","runCallbacksOnInit","loopCreate","attachEvents","e","target","preload","destroy","deleteInstance","cleanStyles","detachEvents","loopDestroy","removeClasses","removeAttribute","slideVisibleClass","slideActiveClass","slideNextClass","slidePrevClass","deleteProps","static","newDefaults","extendedDefaults","defaults","module","m","installModule","prototypeGroup","protoMethod","use","$kdpim","$c4Sz9","$d3aa16e5c5539775$export$2e2bcd8739ae039","$57d5daab652ed4f7$var$isObject","obj","$57d5daab652ed4f7$export$8b58be045bf06082","src","$57d5daab652ed4f7$export$3fdcb9b4d81368d8","removeEventListener","activeElement","blur","nodeName","getElementById","createEvent","initEvent","children","childNodes","setAttribute","getElementsByTagName","createElementNS","importNode","location","hash","host","hostname","href","origin","pathname","protocol","search","$57d5daab652ed4f7$export$f65ca476c09acec0","doc","$57d5daab652ed4f7$export$8582633f185c62bb","navigator","history","replaceState","pushState","go","back","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","matchMedia","requestAnimationFrame","callback","cancelAnimationFrame","$57d5daab652ed4f7$export$38b2d434cce3ea22","win","window","$a0cd23a932383e06$export$8694e5c03a4df8e6","object","e1","$a0cd23a932383e06$export$bdd553fddd433dcb","delay","$a0cd23a932383e06$export$461939dd4422153","now","$a0cd23a932383e06$export$5ec402b7fcf74398","axis","getWindow","matrix","curTransform","transformMatrix","curStyle","currentStyle","$a0cd23a932383e06$export$3735103072e4a80","WebKitCSSMatrix","transform","webkitTransform","a","replace","MozTransform","OTransform","MsTransform","msTransform","m41","parseFloat","m42","$a0cd23a932383e06$export$a6cdc56e425d0d0a","o","$a0cd23a932383e06$export$8b58be045bf06082","to","noExtend","nextSource","node","HTMLElement","nodeType","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","$a0cd23a932383e06$export$a607267f322101fd","varName","varValue","setProperty","$a0cd23a932383e06$export$a5dd2b4b1a116d6d","targetPosition","side","startPosition","time","startTime","duration","scrollSnapType","cssModeFrameID","isOutOfBound","animate","getTime","easeProgress","cos","PI","currentPosition","scrollTo","$a0cd23a932383e06$export$616841b86f802685","$a0cd23a932383e06$export$eb846d859f2895e6","selector","matches","$a0cd23a932383e06$export$c8a8987d4410bf2d","tag","classes","$a0cd23a932383e06$export$d7820ec56f35bbaa","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","$a0cd23a932383e06$export$392b9fa9626e91e0","prevEls","previousElementSibling","prev","$a0cd23a932383e06$export$b245807c30cf5df8","nextEls","nextElementSibling","next","$a0cd23a932383e06$export$4184470d4bd0f986","prop","$a0cd23a932383e06$export$371885c503a01623","child","previousSibling","$a0cd23a932383e06$export$aedc7b608ca8e855","parents","parent","parentElement","$a0cd23a932383e06$export$6b974c5889da0bb5","fireCallBack","$a0cd23a932383e06$export$863f37913038cf77","includeMargins","offsetWidth","$0ec8fed4d94b7d0e$var$support","$0ec8fed4d94b7d0e$export$d61c7b85ff180578","smoothScroll","documentElement","touch","DocumentTouch","$0ec8fed4d94b7d0e$var$calcSupport","$7792fe51e58fd98a$var$deviceCached","$7792fe51e58fd98a$export$30c823bc834d6ab4","overrides","platform","ua","ios","android","screenWidth","screenHeight","match","ipad","ipod","iphone","windows","macos","os","$7792fe51e58fd98a$var$calcDevice","$f20ab12260e3c8aa$var$browser","$f20ab12260e3c8aa$export$89e15fc796a4a429","needPerspectiveFix","isSafari","String","includes","major","minor","num","Number","isWebView","test","$f20ab12260e3c8aa$var$calcBrowser","$eb78a4a6fe62148c$export$2e2bcd8739ae039","observer","animationFrame","resizeHandler","orientationChangeHandler","resizeObserver","ResizeObserver","entries","newWidth","newHeight","contentBoxSize","contentRect","inlineSize","blockSize","observe","unobserve","$8cb02f6e7ce8fb4d$export$2e2bcd8739ae039","observers","attach","options","MutationObserver","WebkitMutationObserver","mutations","__preventObserver__","observerUpdate","attributes","childList","characterData","observeParents","observeSlideChildren","containerParents","elementParents","disconnect","splice","$044a2fc60b096a26$export$2e2bcd8739ae039","events","handler","priority","self","method","event","onceHandler","__emitterProxy","apply","offAny","eventHandler","data","context","unshift","$2nlfG","$e4f8f8ad9cb19e91$export$2e2bcd8739ae039","$aafDk","$jMtU7","$kPOBn","$8OSjY","$hBtS3","$29hok","$lCVGa","$3EEt9","$1bae36ef23f50f9c$export$2e2bcd8739ae039","clientWidth","clientHeight","parseInt","isNaN","$7666f706306747b4$export$2e2bcd8739ae039","getDirectionLabel","property","marginRight","getDirectionPropertyValue","label","isVirtual","previousSlidesLength","slidesLength","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidePosition","prevSlideSize","virtualSize","marginLeft","marginBottom","marginTop","cssMode","setCSSProperty","gridEnabled","grid","rows","initSlides","shouldResetSlideSize","slide","updateSlide","slideStyles","currentTransform","currentWebKitTransform","roundLengths","elementOuterSize","paddingLeft","paddingRight","boxSizing","floor","abs","slidesPerGroup","slidesPerGroupSkip","effect","setWrapperSize","updateWrapperSize","newSlidesGrid","slidesGridItem","groups","ceil","slidesAfter","groupSize","_","slideIndex","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesOffset","snapIndex","addToSnapGrid","addToSlidesGrid","v","watchSlidesProgress","updateSlidesOffset","backFaceHiddenClass","hasClassBackfaceClassAdded","maxBackfaceHiddenSlides","$e669b25e9df72d3e$export$2e2bcd8739ae039","activeSlides","setTransition","getSlideByIndex","visibleSlides","offsetHeight","$f2afd2868f8e8bc2$export$2e2bcd8739ae039","minusOffset","offsetLeft","offsetTop","swiperSlideOffset","$66bd21459a070ee6$export$2e2bcd8739ae039","offsetCenter","visibleSlidesIndexes","slideOffset","slideProgress","originalSlideProgress","slideBefore","slideAfter","originalProgress","$cd0d10153bc4aa64$export$2e2bcd8739ae039","multiplier","translatesDiff","progressLoop","wasBeginning","wasEnd","isBeginningRounded","isEndRounded","lastSlideIndex","firstSlideTranslate","lastSlideTranslate","translateMax","translateAbs","updateSlidesProgress","$1909e99c7f96a783$export$2e2bcd8739ae039","getFilteredSlide","activeSlide","nextSlide","elementNextAll","prevSlide","elementPrevAll","$fbe9e371bf7fd468$export$2e2bcd8739ae039","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","getVirtualRealIndex","aIndex","normalizeSlideIndex","$fbe9e371bf7fd468$export$81ecffcda7ad6ebb","skip","realIndex1","$b09adb3584f4f5c0$export$54749c0631f34ffc","closest","lazyEl","lazyPreloaderClass","$b09adb3584f4f5c0$var$unlazy","$b09adb3584f4f5c0$export$513ccb98c53b8039","amount","lazyPreloadPrevNext","slideIndexLastInView","$2a947fda846258ea$export$2e2bcd8739ae039","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","$1umi3","$36b34534f351ba31$export$2e2bcd8739ae039","$1vvVW","$jVKXc","$a9I2T","$fzQVA","$1159e22d2ec30d20$export$2e2bcd8739ae039","virtualTranslate","getTranslate","$119175075d742233$export$2e2bcd8739ae039","byController","x","y","newProgress","$03be93aa6759504c$export$2e2bcd8739ae039","$764ce935999ac3a7$export$2e2bcd8739ae039","$b5732e441af1da9c$export$2e2bcd8739ae039","runCallbacks","translateBounds","internal","preventInteractionOnTransition","isH","animateCSSModeScroll","behavior","onTranslateToWrapperTransitionEnd","$e2mnO","$80fdd84039bf9f36$export$2e2bcd8739ae039","$C1QMZ","$3QxHx","$a3829d6301edc915$export$2e2bcd8739ae039","transitionDuration","$g81jD","$0724fc2edc847bc2$export$2e2bcd8739ae039","step","$bbde69f506a53967$export$2e2bcd8739ae039","$2cd05ec7ceec4531$export$2e2bcd8739ae039","$VoUIG","$e2d2e56ba51214aa$export$2e2bcd8739ae039","$hma03","$cNUv0","$73yc0","$30lE7","$6K2nc","$k6ufv","$0ac8a65aa579cc54$export$2e2bcd8739ae039","initial","normalizedTranslate","normalizedGrid","normalizedGridNext","transitionStart","transitionEnd","t","_immediateVirtual","_cssModeVirtualInitialSet","onSlideToWrapperTransitionEnd","$ca2c3f7f2b80cb2e$export$2e2bcd8739ae039","newIndex","$9525e32ea72263e1$export$2e2bcd8739ae039","perGroup","slidesPerGroupAuto","increment","loopPreventsSliding","loopFix","_clientLeft","$523356300376327b$export$2e2bcd8739ae039","normalize","val","normalizedSnapGrid","prevSnap","prevSnapIndex","prevIndex","lastIndex","$230229aaaf399bb3$export$2e2bcd8739ae039","$4e88e13af59bc0c1$export$2e2bcd8739ae039","threshold","currentSnap","$ea2bd50b7bab181f$export$2e2bcd8739ae039","slideToIndex","slideSelector","loopedSlides","nextTick","$jAQHU","$5b52a0cd14268ef0$export$2e2bcd8739ae039","$iefk9","$8TQCt","$e43a43ab7da51df1$export$2e2bcd8739ae039","slideRealIndex","$d4556bd6c5a7f2d0$export$2e2bcd8739ae039","activeSlideIndex","byMousewheel","prependSlidesIndexes","appendSlidesIndexes","isNext","isPrev","slidesPrepended","slidesAppended","prepend","currentSlideTranslate","slideToLoop","controller","control","loopParams","c","$67ac46f20fbdf8d4$export$2e2bcd8739ae039","newSlidesOrder","swiperSlideIndex","$8kBkW","$fa12fb2ee5c28987$export$2e2bcd8739ae039","$lGUvJ","$610d2748ae2a3d7a$export$2e2bcd8739ae039","moving","simulateTouch","isLocked","touchEventsTarget","cursor","$fca95b10f60c741c$export$2e2bcd8739ae039","$d20293ed7c4414e4$var$dummyEventAttached","$d20293ed7c4414e4$var$dummyEventListener","$d20293ed7c4414e4$var$events","capture","nested","domMethod","swiperMethod","onTouchStart","passive","onTouchMove","onTouchEnd","preventClicks","preventClicksPropagation","onClick","onScroll","updateOnWindowResize","$i41Or","onLoad","$d20293ed7c4414e4$export$2e2bcd8739ae039","$iDuHK","$hwZYB","$7UVOE","$lI65j","$9A257","$7V4dh","$d913afca7372dc81$export$2e2bcd8739ae039","pointerType","originalEvent","targetEl","which","button","swipingClassHasValue","noSwipingClass","eventPath","composedPath","path","noSwipingSelector","isTargetShadow","noSwiping","base","__closestFrom","assignedSlot","found","getRootNode","$d913afca7372dc81$var$closestElement","swipeHandler","pageX","pageY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","innerWidth","preventDefault","swipeDirection","shouldPreventDefault","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","$cc35800f8eced6b5$export$2e2bcd8739ae039","pointerIndex","findIndex","cachedEv","pointerId","targetTouch","preventedByNestedSwiper","prevX","prevY","touchReleaseOnEdges","targetTouches","diffX","diffY","sqrt","touchAngle","atan2","zoom","cancelable","touchMoveStopPropagation","stopPropagation","touchesDiff","previousX","previousY","oneWayMovement","touchRatio","prevTouchesDirection","touchesDirection","isLoop","evt","bubbles","dispatchEvent","loopFixed","disableParentSwiper","resistanceRatio","resistance","followFinger","$5c3a9c649f4b5f25$export$2e2bcd8739ae039","type","touchEndTime","timeDiff","pathTree","updateClickedSlide","currentPos","stopIndex","rewindFirstIndex","rewindLastIndex","ratio","longSwipesMs","longSwipes","longSwipesRatio","shortSwipes","prevEl","$d26a01a5d69e1b50$var$timeout","$d26a01a5d69e1b50$export$2e2bcd8739ae039","isVirtualLoop","autoplay","running","paused","resume","$6f991739d9bf88be$export$2e2bcd8739ae039","stopImmediatePropagation","$fce26d50c7e61a92$export$2e2bcd8739ae039","$5c411feff72a52ef$export$2e2bcd8739ae039","$6iUdR","$50b100814b3eeec4$export$2e2bcd8739ae039","$kp9jL","$4970091fac3b5d77$var$isGridEnabled","$4970091fac3b5d77$export$2e2bcd8739ae039","breakpoint","getBreakpoint","breakpointsBase","currentBreakpoint","breakpointParams","wasMultiRow","isMultiRow","wasEnabled","fill","wasModuleEnabled","isModuleEnabled","directionChanged","needsReLoop","isEnabled","$edad5ec5e4a0f3c0$export$2e2bcd8739ae039","currentHeight","innerHeight","points","point","minRatio","substr","sort","b","$lHwXw","$42a915ff7a2ae30b$export$2e2bcd8739ae039","$e5Gui","$fcc72e1d6455c726$export$2e2bcd8739ae039","suffixes","prefix","resultClasses","item","$fcc72e1d6455c726$var$prepareClasses","autoheight","centered","$a4227d791ec395d4$export$2e2bcd8739ae039","$3f584f40558f8bb9$export$2e2bcd8739ae039","wasLocked","lastSlideRightEdge","$128e9ae4dc5cc7e1$export$2e2bcd8739ae039","url","uniqueNavElements","passiveListeners","$ed458fea3043c525$export$2e2bcd8739ae039","moduleParamName","moduleParams","auto","$e2yAf","$dbf6f3b26ef5d33c$export$2e2bcd8739ae039","hideOnClick","disabledClass","hiddenClass","lockClass","navigationDisabledClass","makeElementsArray","getEl","res","toggleEl","disabled","subEl","tagName","onPrevClick","slidePrev","onNextClick","slideNext","initButton","destroyButton","_s","pagination","clickable","isHidden","$a38c14293bf6942a$export$2e2bcd8739ae039","checkProps","$edm4W","$465a9c8875b560bc$export$2e2bcd8739ae039","pfx","bulletSize","bulletElement","renderBullet","renderProgressbar","renderFraction","renderCustom","progressbarOpposite","dynamicBullets","dynamicMainBullets","formatFractionCurrent","formatFractionTotal","bulletClass","bulletActiveClass","modifierClass","currentClass","totalClass","progressbarFillClass","progressbarOppositeClass","clickableClass","horizontalClass","verticalClass","paginationDisabledClass","bullets","dynamicBulletIndex","isPaginationDisabled","setSideBullets","bulletEl","position","onBulletClick","total","firstIndex","midIndex","classesToRemove","suffix","s","flat","bullet","bulletIndex","firstDisplayedBullet","lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","offsetProp","subElIndex","fractionEl","textContent","totalEl","progressbarDirection","scale","scaleX","scaleY","progressEl","innerHTML","render","paginationHTML","numberOfBullets","$a59367f5a43a662f$export$2e2bcd8739ae039","$b3f342b4a3f8a5f2$export$2e2bcd8739ae039","appendElement","tempDOM","$0b71822481728c98$export$2e2bcd8739ae039","prependElement","$5e5e77ec41ddd74a$export$2e2bcd8739ae039","activeIndexBuffer","baseLength","prependSlide","appendSlide","slidesBuffer","currentSlide","$5dc678a0b70a1ea8$export$2e2bcd8739ae039","slidesIndexes","indexToRemove","$9fd743be1d735d66$export$2e2bcd8739ae039","removeSlide","$fe3c58194e0402ae$export$2e2bcd8739ae039","overwriteParams","perspective","recreateShadows","getEffectParams","requireUpdateOnVirtual","overwriteParamsResult","slideShadows","$fac719e250553c76$export$2e2bcd8739ae039","effectParams","transformEl","getSlideTransformEl","backfaceVisibility","$42fdb4152f52aa22$export$2e2bcd8739ae039","transformElements","allSlides","transitionEndTarget","eventTriggered","parentNode","getSlide","elementTransitionEnd","$3a65e8106b617bf7$export$2e2bcd8739ae039","shadowClass","shadowContainer","$lnnJO","$b151756e4c7edbdd$export$a9275d98dcd97c2d","$parcel$interopDefault","picture2x","$l8Rm6","$1V668","$6ytzK","$5GANQ","$6sKNI","$lNQbh","$dEZug","$9ENYF","$hpNXB","$h6Nnp","$csPaC","$lNMt2","$aNiNq","$46tLz","$gH5U1","$aIKoX","$7WFpy","exports","URL","resolve","import","meta","$e5a62bdc4f98004d$var$themeSwitcher","$e5a62bdc4f98004d$var$header","$e5a62bdc4f98004d$var$nav","$e5a62bdc4f98004d$var$iconLogo","$e5a62bdc4f98004d$var$iconShop","$e5a62bdc4f98004d$var$categories","$e5a62bdc4f98004d$var$handleChange","theme","checked","btnSeeMore","$e5a62bdc4f98004d$var$themeBtn","$e5a62bdc4f98004d$var$darkPosition","getItem","click","log","register","parse"],"version":3,"file":"shopping-list.5671885e.js.map"}